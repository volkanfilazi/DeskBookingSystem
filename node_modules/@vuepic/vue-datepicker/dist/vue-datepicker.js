import { openBlock as h, createElementBlock as R, createElementVNode as te, reactive as Dt, computed as V, unref as i, ref as F, watch as dt, onMounted as He, nextTick as mt, toRef as Ot, defineComponent as We, renderSlot as W, createCommentVNode as M, normalizeClass as ye, withKeys as ie, createBlock as fe, withModifiers as Je, normalizeStyle as ot, normalizeProps as Ne, mergeProps as Pe, Fragment as ue, createTextVNode as je, toDisplayString as _e, renderList as Me, createVNode as tt, Transition as gt, withCtx as oe, onBeforeUpdate as qn, onUnmounted as on, withDirectives as Pt, vShow as Ct, createSlots as Ee, isRef as lt, guardReactiveProps as Ue, resolveDynamicComponent as Bn, useSlots as sn, getCurrentScope as Jn, onScopeDispose as Qn, Teleport as ea } from "vue";
import { isBefore as un, isEqual as Yn, isAfter as dn, setHours as Vn, setMinutes as En, setSeconds as Ln, setMilliseconds as cn, parse as an, isValid as _t, isDate as ta, format as kt, getMonth as he, getDay as na, getYear as pe, getHours as Xe, getMinutes as qe, getSeconds as yt, parseISO as aa, startOfWeek as hn, endOfWeek as ra, setMonth as Nt, setYear as ut, addDays as vt, set as Be, add as Fn, addMonths as st, subMonths as wt, getWeek as la, getISOWeek as oa, differenceInCalendarDays as sa, eachDayOfInterval as pn, addYears as ia, subYears as ua, sub as da } from "date-fns";
function Lt() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      te("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      te("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      te("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
function ca() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      te("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
function kn() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function wn() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
function Un() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      te("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
function Hn() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function Wn() {
  return h(), R(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      te("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
const bn = (e, n) => {
  const a = an(e, n.slice(0, e.length), new Date());
  return _t(a) && ta(a) ? a : null;
}, fa = (e, n) => {
  if (typeof n == "string")
    return bn(e, n);
  if (Array.isArray(n)) {
    let a = null;
    for (const t of n)
      if (a = bn(e, t), a)
        break;
    return a;
  }
  return typeof n == "function" ? n(e) : null;
}, D = (e) => e ? new Date(e) : new Date(), va = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), s = e.getDate().toString().padStart(2, "0"), c = e.getHours().toString().padStart(2, "0"), p = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${s}T${c}:${p}:00.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, xe = (e) => {
  let n = D(JSON.parse(JSON.stringify(e)));
  return n = Vn(n, 0), n = En(n, 0), n = Ln(n, 0), n = cn(n, 0), n;
}, Fe = (e, n, a, t) => {
  let s = e ? D(e) : D();
  return (n || n === 0) && (s = Vn(s, +n)), (a || a === 0) && (s = En(s, +a)), (t || t === 0) && (s = Ln(s, +t)), cn(s, 0);
}, Re = (e, n) => !e || !n ? !1 : un(xe(e), xe(n)), ke = (e, n) => !e || !n ? !1 : Yn(xe(e), xe(n)), Ve = (e, n) => !e || !n ? !1 : dn(xe(e), xe(n)), zn = (e, n, a) => e && e[0] && e[1] ? Ve(a, e[0]) && Re(a, e[1]) : e && e[0] && n ? Ve(a, e[0]) && Re(a, n) || Re(a, e[0]) && Ve(a, n) : !1, pt = Dt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Kn = () => {
  const e = (t) => {
    pt.menuFocused = t;
  }, n = (t) => {
    pt.shiftKeyInMenu !== t && (pt.shiftKeyInMenu = t);
  };
  return {
    control: V(() => ({ shiftKeyInMenu: pt.shiftKeyInMenu, menuFocused: pt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function fn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var It = {}, ma = {
  get exports() {
    return It;
  },
  set exports(e) {
    It = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var s = Number(t);
    return isNaN(s) ? s : s < 0 ? Math.ceil(s) : Math.floor(s);
  }
  e.exports = n.default;
})(ma, It);
const ya = /* @__PURE__ */ fn(It);
var Bt = {}, ga = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var s = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return s.setUTCFullYear(t.getFullYear()), t.getTime() - s.getTime();
  }
  e.exports = n.default;
})(ga, Bt);
const Dn = /* @__PURE__ */ fn(Bt);
function ha(e, n) {
  var a = ba(n);
  return a.formatToParts ? ka(a, e) : wa(a, e);
}
var pa = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function ka(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], s = 0; s < a.length; s++) {
      var c = pa[a[s].type];
      c >= 0 && (t[c] = parseInt(a[s].value, 10));
    }
    return t;
  } catch (p) {
    if (p instanceof RangeError)
      return [NaN];
    throw p;
  }
}
function wa(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var xt = {};
function ba(e) {
  if (!xt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    xt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return xt[e];
}
function vn(e, n, a, t, s, c, p) {
  var $ = new Date(0);
  return $.setUTCFullYear(e, n, a), $.setUTCHours(t, s, c, p), $;
}
var $n = 36e5, Da = 6e4, Gt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function mn(e, n, a) {
  var t, s;
  if (!e || (t = Gt.timezoneZ.exec(e), t))
    return 0;
  var c;
  if (t = Gt.timezoneHH.exec(e), t)
    return c = parseInt(t[1], 10), Mn(c) ? -(c * $n) : NaN;
  if (t = Gt.timezoneHHMM.exec(e), t) {
    c = parseInt(t[1], 10);
    var p = parseInt(t[2], 10);
    return Mn(c, p) ? (s = Math.abs(c) * $n + p * Da, c > 0 ? -s : s) : NaN;
  }
  if (Ta(e)) {
    n = new Date(n || Date.now());
    var $ = a ? n : $a(n), I = rn($, e), O = a ? I : Ma(n, I, e);
    return -O;
  }
  return NaN;
}
function $a(e) {
  return vn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function rn(e, n) {
  var a = ha(e, n), t = vn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), s = e.getTime(), c = s % 1e3;
  return s -= c >= 0 ? c : 1e3 + c, t - s;
}
function Ma(e, n, a) {
  var t = e.getTime(), s = t - n, c = rn(new Date(s), a);
  if (n === c)
    return n;
  s -= c - n;
  var p = rn(new Date(s), a);
  return c === p ? c : Math.max(c, p);
}
function Mn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var Tn = {};
function Ta(e) {
  if (Tn[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), Tn[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Aa = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const jn = Aa;
var Zt = 36e5, An = 6e4, Sa = 2, Ye = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: jn
};
function ln(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? Sa : ya(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return new Date(NaN);
  var s = Pa(e), c = Ca(s.date, t), p = c.year, $ = c.restDateString, I = _a($, p);
  if (isNaN(I))
    return new Date(NaN);
  if (I) {
    var O = I.getTime(), L = 0, S;
    if (s.time && (L = Na(s.time), isNaN(L)))
      return new Date(NaN);
    if (s.timeZone || a.timeZone) {
      if (S = mn(s.timeZone || a.timeZone, new Date(O + L)), isNaN(S))
        return new Date(NaN);
    } else
      S = Dn(new Date(O + L)), S = Dn(new Date(O + L + S));
    return new Date(O + L + S);
  } else
    return new Date(NaN);
}
function Pa(e) {
  var n = {}, a = Ye.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Ye.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var s = Ye.timeZone.exec(t);
    s ? (n.time = t.replace(s[1], ""), n.timeZone = s[1].trim()) : n.time = t;
  }
  return n;
}
function Ca(e, n) {
  var a = Ye.YYY[n], t = Ye.YYYYY[n], s;
  if (s = Ye.YYYY.exec(e) || t.exec(e), s) {
    var c = s[1];
    return {
      year: parseInt(c, 10),
      restDateString: e.slice(c.length)
    };
  }
  if (s = Ye.YY.exec(e) || a.exec(e), s) {
    var p = s[1];
    return {
      year: parseInt(p, 10) * 100,
      restDateString: e.slice(p.length)
    };
  }
  return {
    year: null
  };
}
function _a(e, n) {
  if (n === null)
    return null;
  var a, t, s, c;
  if (e.length === 0)
    return t = new Date(0), t.setUTCFullYear(n), t;
  if (a = Ye.MM.exec(e), a)
    return t = new Date(0), s = parseInt(a[1], 10) - 1, Pn(n, s) ? (t.setUTCFullYear(n, s), t) : new Date(NaN);
  if (a = Ye.DDD.exec(e), a) {
    t = new Date(0);
    var p = parseInt(a[1], 10);
    return Ia(n, p) ? (t.setUTCFullYear(n, 0, p), t) : new Date(NaN);
  }
  if (a = Ye.MMDD.exec(e), a) {
    t = new Date(0), s = parseInt(a[1], 10) - 1;
    var $ = parseInt(a[2], 10);
    return Pn(n, s, $) ? (t.setUTCFullYear(n, s, $), t) : new Date(NaN);
  }
  if (a = Ye.Www.exec(e), a)
    return c = parseInt(a[1], 10) - 1, Cn(n, c) ? Sn(n, c) : new Date(NaN);
  if (a = Ye.WwwD.exec(e), a) {
    c = parseInt(a[1], 10) - 1;
    var I = parseInt(a[2], 10) - 1;
    return Cn(n, c, I) ? Sn(n, c, I) : new Date(NaN);
  }
  return null;
}
function Na(e) {
  var n, a, t;
  if (n = Ye.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), Xt(a) ? a % 24 * Zt : NaN;
  if (n = Ye.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Xt(a, t) ? a % 24 * Zt + t * An : NaN;
  if (n = Ye.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var s = parseFloat(n[3].replace(",", "."));
    return Xt(a, t, s) ? a % 24 * Zt + t * An + s * 1e3 : NaN;
  }
  return null;
}
function Sn(e, n, a) {
  n = n || 0, a = a || 0;
  var t = new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var s = t.getUTCDay() || 7, c = n * 7 + a + 1 - s;
  return t.setUTCDate(t.getUTCDate() + c), t;
}
var Ra = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Oa = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function xn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Pn(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = xn(e);
    if (t && a > Oa[n] || !t && a > Ra[n])
      return !1;
  }
  return !0;
}
function Ia(e, n) {
  if (n < 1)
    return !1;
  var a = xn(e);
  return !(a && n > 366 || !a && n > 365);
}
function Cn(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function Xt(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var Yt = {}, Ba = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
}, Vt = {}, Ya = {
  get exports() {
    return Vt;
  },
  set exports(e) {
    Vt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, s) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var c in s)
      Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
    return t;
  }
  e.exports = n.default;
})(Ya, Vt);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = s;
  var a = t(Vt);
  function t(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function s(c) {
    return (0, a.default)({}, c);
  }
  e.exports = n.default;
})(Ba, Yt);
const Va = /* @__PURE__ */ fn(Yt);
function Ea(e, n, a) {
  var t = ln(e, a), s = mn(n, t, !0), c = new Date(t.getTime() - s), p = new Date(0);
  return p.setFullYear(c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate()), p.setHours(c.getUTCHours(), c.getUTCMinutes(), c.getUTCSeconds(), c.getUTCMilliseconds()), p;
}
function La(e, n, a) {
  if (typeof e == "string" && !e.match(jn)) {
    var t = Va(a);
    return t.timeZone = n, ln(e, t);
  }
  var s = ln(e, a), c = vn(
    s.getFullYear(),
    s.getMonth(),
    s.getDate(),
    s.getHours(),
    s.getMinutes(),
    s.getSeconds(),
    s.getMilliseconds()
  ).getTime(), p = mn(n, new Date(c));
  return new Date(c + p);
}
const Fa = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, Ua = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((c) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(new Date(`2017-01-0${c}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), s = a.slice(n + 1, a.length);
  return [a[n]].concat(...s).concat(...t);
}, Ha = (e) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: `${a}` });
  return n;
}, Wa = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((s) => {
    const c = s < 10 ? `0${s}` : s;
    return new Date(`2017-${c}-01T00:00:00+00:00`);
  }).map((s, c) => ({
    text: a.format(s),
    value: c
  }));
}, za = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Te = (e) => {
  const n = i(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, Ka = (e) => Object.assign({ type: "dot" }, e), Gn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Et = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Se = (e) => e, _n = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Nn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), ja = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), xa = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Ga = (e, n, a) => e || (typeof a == "string" ? a : n), Za = (e) => typeof e == "boolean" ? e ? Nn({}) : !1 : Nn(e), Xa = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), qa = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Le = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Et.prop("partial-range"));
  }, a = V(() => ({
    ariaLabels: ja(e.ariaLabels),
    textInputOptions: Object.assign(Xa(), e.textInputOptions),
    multiCalendars: xa(e.multiCalendars),
    previewFormat: Ga(e.previewFormat, e.format, c()),
    filters: qa(e.filters),
    transitions: Za(e.transitions),
    startTime: d()
  })), t = (r) => {
    if (e.range)
      return r();
    throw new Error(Et.prop("range"));
  }, s = () => {
    const r = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${r}` : `hh:mm${r} aa`;
  }, c = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? s() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${s()}` : "MM/dd/yyyy", p = (r, v) => {
    if (typeof e.format == "function")
      return e.format(r);
    const m = v || c(), k = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(r) ? `${kt(r[0], m, k)} ${e.modelAuto && !r[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"} ${r[1] ? kt(r[1], m, k) : ""}` : kt(r, m, k);
  }, $ = (r) => e.timezone ? Ea(r, e.timezone) : r, I = (r) => e.timezone ? La(r, e.timezone) : r, O = V(() => (r) => {
    var v;
    return (v = e.hideNavigation) == null ? void 0 : v.includes(r);
  }), L = (r) => {
    const v = e.maxDate ? Ve($(r), $(D(e.maxDate))) : !1, m = e.minDate ? Re($(r), $(D(e.minDate))) : !1, k = B(r, e.disabledDates), Z = a.value.filters.months.map((be) => +be).includes(he(r)), ce = e.disabledWeekDays.length ? e.disabledWeekDays.some((be) => +be === na(r)) : !1, f = e.allowedDates.length ? !e.allowedDates.some((be) => ke($(D(be)), $(r))) : !1, l = pe(r), G = l < +e.yearRange[0] || l > +e.yearRange[1];
    return !(v || m || k || Z || G || ce || f);
  }, S = (r) => {
    const v = {
      hours: Xe(D()),
      minutes: qe(D()),
      seconds: yt(D())
    };
    return Object.assign(v, r);
  }, d = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [S(e.startTime[0]), S(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? S(e.startTime) : null, A = (r) => !L(r), z = (r) => Array.isArray(r) ? _t(r[0]) && (r[1] ? _t(r[1]) : !0) : r ? _t(r) : !1, Y = (r) => r instanceof Date ? r : aa(r), Q = (r) => {
    const v = hn($(r), { weekStartsOn: +e.weekStart }), m = ra($(r), { weekStartsOn: +e.weekStart });
    return [v, m];
  }, B = (r, v) => Array.isArray(v) ? v.some((m) => ke($(D(m)), $(r))) : v(r), E = (r, v, m) => {
    let k = r ? D(r) : D();
    return (v || v === 0) && (k = Nt(k, v)), m && (k = ut(k, m)), k;
  }, N = (r) => Be(D(), { hours: Xe(r), minutes: qe(r), seconds: yt(r) }), x = (r) => Be(D(), {
    hours: +r.hours || 0,
    minutes: +r.minutes || 0,
    seconds: +r.seconds || 0
  }), ne = (r, v, m, k) => {
    if (!r)
      return !0;
    if (k) {
      const K = m === "max" ? un(r, v) : dn(r, v), Z = { seconds: 0, milliseconds: 0 };
      return K || Yn(Be(r, Z), Be(v, Z));
    }
    return m === "max" ? r.getTime() <= v.getTime() : r.getTime() >= v.getTime();
  }, le = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, de = (r) => Array.isArray(r) ? [r[0] ? N(r[0]) : null, r[1] ? N(r[1]) : null] : N(r), _ = (r) => {
    const v = e.maxTime ? x(e.maxTime) : D(e.maxDate);
    return Array.isArray(r) ? ne(r[0], v, "max", !!e.maxDate) && ne(r[1], v, "max", !!e.maxDate) : ne(r, v, "max", !!e.maxDate);
  }, y = (r, v) => {
    const m = e.minTime ? x(e.minTime) : D(e.minDate);
    return Array.isArray(r) ? ne(r[0], m, "min", !!e.minDate) && ne(r[1], m, "min", !!e.minDate) && v : ne(r, m, "min", !!e.minDate) && v;
  }, C = (r) => {
    let v = !0;
    if (!r || le())
      return !0;
    const m = !e.minDate && !e.maxDate ? de(r) : r;
    return (e.maxTime || e.maxDate) && (v = _(Se(m))), (e.minTime || e.minDate) && (v = y(Se(m), v)), v;
  }, w = (r, v) => {
    const m = D(JSON.parse(JSON.stringify(r))), k = [];
    for (let K = 0; K < 7; K++) {
      const Z = vt(m, K), ce = he(Z) !== v;
      k.push({
        text: e.hideOffsetDates && ce ? "" : Z.getDate(),
        value: Z,
        current: !ce,
        classData: {}
      });
    }
    return k;
  }, U = (r, v) => {
    const m = [], k = D($(new Date(v, r))), K = D($(new Date(v, r + 1, 0))), Z = hn(k, { weekStartsOn: e.weekStart }), ce = (f) => {
      const l = w(f, r);
      if (m.push({ days: l }), !m[m.length - 1].days.some(
        (G) => ke(xe(G.value), xe(K))
      )) {
        const G = vt(f, 7);
        ce(G);
      }
    };
    if (ce(Z), e.sixWeeks && m.length < 6) {
      const f = 6 - m.length;
      for (let l = 1; l <= f; l++) {
        const G = m[m.length - 1], be = G.days[G.days.length - 1], De = w(vt(be.value, 1), he(k));
        m.push({ days: De });
      }
    }
    return m;
  }, X = (r, v, m) => [Be(D(r), { date: 1 }), Be(D(), { month: v, year: m, date: 1 })], J = (r, v) => Re(...X(e.minDate, r, v)) || ke(...X(e.minDate, r, v)), T = (r, v) => Ve(...X(e.maxDate, r, v)) || ke(...X(e.maxDate, r, v)), P = (r, v, m) => {
    let k = !1;
    return e.maxDate && m && T(r, v) && (k = !0), e.minDate && !m && J(r, v) && (k = !0), k;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: $,
    getZonedToUtc: I,
    formatDate: p,
    getDefaultPattern: c,
    validateDate: L,
    getDefaultStartTime: d,
    isDisabled: A,
    isValidDate: z,
    sanitizeDate: Y,
    getWeekFromDate: Q,
    matchDate: B,
    setDateMonthOrYear: E,
    isValidTime: C,
    getCalendarDays: U,
    validateMonthYearInRange: (r, v, m, k) => {
      let K = !1;
      return k ? e.minDate && e.maxDate ? K = P(r, v, m) : (e.minDate && J(r, v) || e.maxDate && T(r, v)) && (K = !0) : K = !0, K;
    },
    validateMaxDate: T,
    validateMinDate: J,
    defaults: a,
    hideNavigationButtons: O
  };
}, ge = Dt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), qt = F(null), St = F(!1), Jt = F(!1), Qt = F(!1), en = F(!1), Ie = F(0), Ce = F(0), nt = () => {
  const e = V(() => St.value ? [...ge.selectionGrid, ge.actionRow].filter((B) => B.length) : Jt.value ? [
    ...ge.timePicker[0],
    ...ge.timePicker[1],
    en.value ? [] : [qt.value],
    ge.actionRow
  ].filter((B) => B.length) : Qt.value ? [...ge.monthPicker, ge.actionRow] : [ge.monthYear, ...ge.calendar, ge.time, ge.actionRow].filter((B) => B.length)), n = (B) => {
    Ie.value = B ? Ie.value + 1 : Ie.value - 1;
    let E = null;
    e.value[Ce.value] && (E = e.value[Ce.value][Ie.value]), E || (Ie.value = B ? Ie.value - 1 : Ie.value + 1);
  }, a = (B) => {
    if (Ce.value === 0 && !B || Ce.value === e.value.length && B)
      return;
    Ce.value = B ? Ce.value + 1 : Ce.value - 1, e.value[Ce.value] ? e.value[Ce.value] && !e.value[Ce.value][Ie.value] && Ie.value !== 0 && (Ie.value = e.value[Ce.value].length - 1) : Ce.value = B ? Ce.value - 1 : Ce.value + 1;
  }, t = (B) => {
    let E = null;
    e.value[Ce.value] && (E = e.value[Ce.value][Ie.value]), E ? E.focus({ preventScroll: !St.value }) : Ie.value = B ? Ie.value - 1 : Ie.value + 1;
  }, s = () => {
    n(!0), t(!0);
  }, c = () => {
    n(!1), t(!1);
  }, p = () => {
    a(!1), t(!0);
  }, $ = () => {
    a(!0), t(!0);
  }, I = (B, E) => {
    ge[E] = B;
  }, O = (B, E) => {
    ge[E] = B;
  }, L = () => {
    Ie.value = 0, Ce.value = 0;
  };
  return {
    buildMatrix: I,
    buildMultiLevelMatrix: O,
    setTimePickerBackRef: (B) => {
      qt.value = B;
    },
    setSelectionGrid: (B) => {
      St.value = B, L(), B || (ge.selectionGrid = []);
    },
    setTimePicker: (B, E = !1) => {
      Jt.value = B, en.value = E, L(), B || (ge.timePicker[0] = [], ge.timePicker[1] = []);
    },
    setTimePickerElements: (B, E = 0) => {
      ge.timePicker[E] = B;
    },
    arrowRight: s,
    arrowLeft: c,
    arrowUp: p,
    arrowDown: $,
    clearArrowNav: () => {
      ge.monthYear = [], ge.calendar = [], ge.time = [], ge.actionRow = [], ge.selectionGrid = [], ge.timePicker[0] = [], ge.timePicker[1] = [], St.value = !1, Jt.value = !1, en.value = !1, Qt.value = !1, L(), qt.value = null;
    },
    setMonthPicker: (B) => {
      Qt.value = B, L();
    },
    refSets: ge
    // exposed for testing
  };
}, Rn = (e) => Array.isArray(e), rt = (e) => Array.isArray(e), On = (e) => Array.isArray(e) && e.length === 2, Ja = (e, n, a, t, s) => {
  const {
    getDefaultStartTime: c,
    isDisabled: p,
    sanitizeDate: $,
    getWeekFromDate: I,
    setDateMonthOrYear: O,
    validateMonthYearInRange: L,
    defaults: S
  } = Le(e), d = V({
    get: () => e.internalModelValue,
    set: (o) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", o);
    }
  }), A = F([]);
  dt(d, () => {
    ne();
  });
  const z = F([{ month: he(D()), year: pe(D()) }]), Y = Dt({
    hours: e.range ? [Xe(D()), Xe(D())] : Xe(D()),
    minutes: e.range ? [qe(D()), qe(D())] : qe(D()),
    seconds: e.range ? [0, 0] : 0
  }), Q = V(
    () => (o) => z.value[o] ? z.value[o].month : 0
  ), B = V(
    () => (o) => z.value[o] ? z.value[o].year : 0
  ), E = V(() => e.flow && e.flow.length && !e.partialFlow ? s.value === e.flow.length : !0), N = (o, b, j) => {
    var ee, we;
    z.value[o] || (z.value[o] = { month: 0, year: 0 }), z.value[o].month = b === null ? (ee = z.value[o]) == null ? void 0 : ee.month : b, z.value[o].year = j === null ? (we = z.value[o]) == null ? void 0 : we.year : j;
  }, x = (o, b) => {
    Y[o] = b;
  };
  He(() => {
    d.value || (e.startDate && (N(0, he(D(e.startDate)), pe(D(e.startDate))), S.value.multiCalendars && ve(0)), S.value.startTime && T()), ne(!0);
  });
  const ne = (o = !1) => {
    if (d.value)
      return Array.isArray(d.value) ? (A.value = d.value, C(o)) : de(d.value);
    if (e.timePicker)
      return w();
    if (e.monthPicker && !e.range)
      return U();
    if (e.yearPicker && !e.range)
      return X();
    if (S.value.multiCalendars && o && !e.startDate)
      return le(D(), o);
  }, le = (o, b = !1) => {
    if ((!S.value.multiCalendars || !e.multiStatic || b) && N(0, he(o), pe(o)), S.value.multiCalendars)
      for (let j = 1; j < S.value.multiCalendars; j++) {
        const ee = Be(D(), { month: Q.value(j - 1), year: B.value(j - 1) }), we = Fn(ee, { months: 1 });
        z.value[j] = { month: he(we), year: pe(we) };
      }
  }, de = (o) => {
    le(o), x("hours", Xe(o)), x("minutes", qe(o)), x("seconds", yt(o));
  }, _ = (o, b) => {
    le(o[0], b);
    const j = (ee, we) => [
      ee(o[0]),
      o[1] ? ee(o[1]) : Y[we][1]
    ];
    x("hours", j(Xe, "hours")), x("minutes", j(qe, "minutes")), x("seconds", j(yt, "seconds"));
  }, y = (o, b) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return _(o, b);
    if (e.multiDates) {
      const j = o[o.length - 1];
      return de(j);
    }
  }, C = (o) => {
    const b = d.value;
    y(b, o), S.value.multiCalendars && e.multiCalendarsSolo && u();
  }, w = () => {
    if (T(), !e.range)
      d.value = Fe(D(), Y.hours, Y.minutes, J());
    else {
      const o = Y.hours, b = Y.minutes;
      d.value = [
        Fe(D(), o[0], b[0], J()),
        Fe(D(), o[1], b[1], J(!1))
      ];
    }
  }, U = () => {
    d.value = O(D(), Q.value(0), B.value(0));
  }, X = () => {
    d.value = D();
  }, J = (o = !0) => e.enableSeconds ? Array.isArray(Y.seconds) ? o ? Y.seconds[0] : Y.seconds[1] : Y.seconds : 0, T = () => {
    const o = c();
    if (o) {
      const b = Array.isArray(o), j = b ? [+o[0].hours, +o[1].hours] : +o.hours, ee = b ? [+o[0].minutes, +o[1].minutes] : +o.minutes, we = b ? [+o[0].seconds, +o[1].seconds] : +o.seconds;
      x("hours", j), x("minutes", ee), e.enableSeconds && x("seconds", we);
    }
  }, P = () => Array.isArray(d.value) && d.value.length ? d.value[d.value.length - 1] : null, u = () => {
    if (Array.isArray(d.value) && d.value.length === 2) {
      const o = D(
        D(d.value[1] ? d.value[1] : st(d.value[0], 1))
      ), [b, j] = [he(d.value[0]), pe(d.value[0])], [ee, we] = [he(d.value[1]), pe(d.value[1])];
      (b !== ee || b === ee && j !== we) && e.multiCalendarsSolo && N(1, he(o), pe(o));
    }
  }, r = (o) => {
    const b = st(o, 1);
    return { month: he(b), year: pe(b) };
  }, v = (o) => {
    const b = he(D(o)), j = pe(D(o));
    if (N(0, b, j), S.value.multiCalendars > 0)
      for (let ee = 1; ee < S.value.multiCalendars; ee++) {
        const we = r(
          Be(D(o), { year: Q.value(ee - 1), month: B.value(ee - 1) })
        );
        N(ee, we.month, we.year);
      }
  }, m = (o) => {
    if (d.value && Array.isArray(d.value))
      if (d.value.some((b) => ke(o, b))) {
        const b = d.value.filter((j) => !ke(j, o));
        d.value = b.length ? b : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > d.value.length || !e.multiDatesLimit) && d.value.push(o);
    else
      d.value = [o];
  }, k = (o, b) => {
    const j = Ve(o, b) ? b : o, ee = Ve(b, o) ? b : o;
    return pn({ start: j, end: ee });
  }, K = (o, b = 0) => {
    if (Array.isArray(d.value) && d.value[b]) {
      const j = sa(o, d.value[b]), ee = k(d.value[b], o), we = ee.length === 1 ? 0 : ee.filter((H) => p(H)).length, g = Math.abs(j) - we;
      if (e.minRange && e.maxRange)
        return g >= +e.minRange && g <= +e.maxRange;
      if (e.minRange)
        return g >= +e.minRange;
      if (e.maxRange)
        return g <= +e.maxRange;
    }
    return !0;
  }, Z = (o) => Array.isArray(d.value) && d.value.length === 2 ? e.fixedStart && (Ve(o, d.value[0]) || ke(o, d.value[0])) ? [d.value[0], o] : e.fixedEnd && (Re(o, d.value[1]) || ke(o, d.value[1])) ? [o, d.value[1]] : (n("invalid-fixed-range", o), d.value) : [], ce = () => {
    e.autoApply && E.value && n("auto-apply", e.partialFlow);
  }, f = () => {
    e.autoApply && n("select-date");
  }, l = (o) => !pn({ start: o[0], end: o[1] }).some((j) => p(j)), G = (o) => (d.value = I(D(o.value)), ce()), be = (o) => {
    const b = Fe(D(o.value), Y.hours, Y.minutes, J());
    e.multiDates ? m(b) : d.value = b, a(), ce();
  }, De = () => {
    A.value = d.value ? d.value.slice() : [], A.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (A.value = []);
  }, ze = (o, b) => {
    const j = [D(o.value), vt(D(o.value), +e.autoRange)];
    l(j) && (b && v(o.value), A.value = j);
  }, Qe = (o) => {
    ae(o.value) || !K(o.value, e.fixedStart ? 0 : 1) || (A.value = Z(D(o.value)));
  }, ae = (o) => e.noDisabledRange ? k(A.value[0], o).some((j) => p(j)) : !1, et = (o, b) => {
    if (De(), e.autoRange)
      return ze(o, b);
    if (e.fixedStart || e.fixedEnd)
      return Qe(o);
    A.value[0] ? K(D(o.value)) && !ae(o.value) && (Re(D(o.value), D(A.value[0])) ? A.value.unshift(D(o.value)) : A.value[1] = D(o.value)) : A.value[0] = D(o.value);
  }, Ke = (o) => {
    A.value[o] = Fe(
      A.value[o],
      Y.hours[o],
      Y.minutes[o],
      J(o !== 1)
    );
  }, Oe = () => {
    A.value.length && (A.value[0] && !A.value[1] ? Ke(0) : (Ke(0), Ke(1), a()), d.value = A.value.slice(), A.value[0] && A.value[1] && e.autoApply && n("auto-apply"), A.value[0] && !A.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, re = (o, b = !1) => {
    if (!(p(o.value) || !o.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return G(o);
      if (!e.range)
        return be(o);
      rt(Y.hours) && rt(Y.minutes) && !e.multiDates && (et(o, b), Oe());
    }
  }, me = (o) => {
    const b = o[0];
    return e.weekNumbers === "local" ? la(b.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? oa(b.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(b.value) : "";
  }, ve = (o) => {
    for (let b = o - 1; b >= 0; b--) {
      const j = wt(Be(D(), { month: Q.value(b + 1), year: B.value(b + 1) }), 1);
      N(b, he(j), pe(j));
    }
    for (let b = o + 1; b <= S.value.multiCalendars - 1; b++) {
      const j = st(Be(D(), { month: Q.value(b - 1), year: B.value(b - 1) }), 1);
      N(b, he(j), pe(j));
    }
  }, Ge = (o) => O(D(), Q.value(o), B.value(o)), Ze = (o) => Fe(o, Y.hours, Y.minutes, J()), Ut = (o, b) => {
    const j = e.monthPicker ? Q.value(o) !== b.month || !b.fromNav : B.value(o) !== b.year;
    if (N(o, b.month, b.year), S.value.multiCalendars && !e.multiCalendarsSolo && ve(o), e.monthPicker || e.yearPicker)
      if (e.range) {
        if (j) {
          let ee = d.value ? d.value.slice() : [];
          ee.length === 2 && ee[1] !== null && (ee = []), ee.length ? Re(Ge(o), ee[0]) ? ee.unshift(Ge(o)) : ee[1] = Ge(o) : ee = [Ge(o)], d.value = ee;
        }
      } else
        d.value = Ge(o);
    n("update-month-year", { instance: o, month: b.month, year: b.year }), t(e.multiCalendarsSolo ? o : void 0);
  }, Ht = async (o = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await mt();
      const b = e.monthPicker ? o : !1;
      e.range ? n("auto-apply", b || !d.value || d.value.length === 1) : n("auto-apply", b);
    }
    a();
  }, $t = (o, b) => {
    const j = Be(D(), { month: Q.value(b), year: B.value(b) }), ee = o < 0 ? st(j, 1) : wt(j, 1);
    L(he(ee), pe(ee), o < 0, e.preventMinMaxNavigation) && (N(b, he(ee), pe(ee)), S.value.multiCalendars && !e.multiCalendarsSolo && ve(b), n("update-month-year", { instance: b, month: he(ee), year: pe(ee) }), t());
  }, ht = (o) => {
    Rn(o) && Rn(d.value) && rt(Y.hours) && rt(Y.minutes) ? (o[0] && d.value[0] && (d.value[0] = Fe(o[0], Y.hours[0], Y.minutes[0], J())), o[1] && d.value[1] && (d.value[1] = Fe(o[1], Y.hours[1], Y.minutes[1], J(!1)))) : e.multiDates && Array.isArray(d.value) ? d.value[d.value.length - 1] = Ze(o) : !e.range && !On(o) && (d.value = Ze(o)), n("time-update");
  }, Wt = (o, b = !0, j = !1) => {
    const ee = b ? o : Y.hours, we = !b && !j ? o : Y.minutes, g = j ? o : Y.seconds;
    if (e.range && On(d.value) && rt(ee) && rt(we) && rt(g) && !e.disableTimeRangeValidation) {
      const H = ($e) => Fe(d.value[$e], ee[$e], we[$e], g[$e]), Ae = ($e) => cn(d.value[$e], 0);
      if (ke(d.value[0], d.value[1]) && (dn(H(0), Ae(1)) || un(H(1), Ae(0))))
        return;
    }
    if (x("hours", ee), x("minutes", we), x("seconds", g), d.value)
      if (e.multiDates) {
        const H = P();
        H && ht(H);
      } else
        ht(d.value);
    else
      e.timePicker && ht(e.range ? [D(), D()] : D());
    a();
  }, zt = (o, b) => {
    e.monthChangeOnScroll && $t(e.monthChangeOnScroll !== "inverse" ? -o.deltaY : o.deltaY, b);
  }, Kt = (o, b, j = !1) => {
    e.monthChangeOnArrows && e.vertical === j && Mt(o, b);
  }, Mt = (o, b) => {
    $t(o === "right" ? -1 : 1, b);
  };
  return {
    time: Y,
    month: Q,
    year: B,
    modelValue: d,
    calendars: z,
    monthYearSelect: Ht,
    isDisabled: p,
    updateTime: Wt,
    getWeekNum: me,
    selectDate: re,
    updateMonthYear: Ut,
    handleScroll: zt,
    getMarker: (o) => e.markers.find((b) => ke($(o.value), $(b.date))),
    handleArrow: Kt,
    handleSwipe: Mt,
    selectCurrentDate: () => {
      e.range ? d.value && Array.isArray(d.value) && d.value[0] ? d.value = Re(D(), d.value[0]) ? [D(), d.value[0]] : [d.value[0], D()] : d.value = [D()] : d.value = D(), f();
    },
    presetDateRange: (o, b) => {
      b || o.length && o.length <= 2 && e.range && (d.value = o.map((j) => D(j)), f(), e.multiCalendars && mt().then(() => ne(!0)));
    }
  };
}, Qa = (e, n, a) => {
  const t = F(), {
    getZonedToUtc: s,
    getZonedDate: c,
    formatDate: p,
    getDefaultPattern: $,
    checkRangeEnabled: I,
    checkPartialRangeValue: O,
    isValidDate: L,
    setDateMonthOrYear: S,
    defaults: d
  } = Le(n), A = F(""), z = Ot(n, "format");
  dt(t, () => {
    e("internal-model-change", t.value);
  }), dt(z, () => {
    r();
  });
  const Y = (l) => {
    const G = l || D();
    return n.modelType ? m(G) : {
      hours: Xe(G),
      minutes: qe(G),
      seconds: n.enableSeconds ? yt(G) : 0
    };
  }, Q = (l) => n.modelType ? m(l) : { month: he(l), year: pe(l) }, B = (l) => Array.isArray(l) ? I(() => [
    ut(D(), l[0]),
    l[1] ? ut(D(), l[1]) : O()
  ]) : ut(D(), +l), E = (l, G) => (typeof l == "string" || typeof l == "number") && n.modelType ? v(l) : G, N = (l) => Array.isArray(l) ? [
    E(
      l[0],
      Fe(null, +l[0].hours, +l[0].minutes, l[0].seconds)
    ),
    E(
      l[1],
      Fe(null, +l[1].hours, +l[1].minutes, l[1].seconds)
    )
  ] : E(l, Fe(null, l.hours, l.minutes, l.seconds)), x = (l) => Array.isArray(l) ? I(() => [
    E(l[0], S(null, +l[0].month, +l[0].year)),
    E(
      l[1],
      l[1] ? S(null, +l[1].month, +l[1].year) : O()
    )
  ]) : E(l, S(null, +l.month, +l.year)), ne = (l) => {
    if (Array.isArray(l))
      return l.map((G) => v(G));
    throw new Error(Et.dateArr("multi-dates"));
  }, le = (l) => {
    if (Array.isArray(l))
      return [D(l[0]), D(l[1])];
    throw new Error(Et.dateArr("week-picker"));
  }, de = (l) => n.modelAuto ? Array.isArray(l) ? [v(l[0]), v(l[1])] : n.autoApply ? [v(l)] : [v(l), null] : Array.isArray(l) ? I(() => [
    v(l[0]),
    l[1] ? v(l[1]) : O()
  ]) : v(l), _ = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(O());
  }, y = () => {
    const l = t.value;
    return [
      m(l[0]),
      l[1] ? m(l[1]) : O()
    ];
  }, C = () => t.value[1] ? y() : m(Se(t.value[0])), w = () => (t.value || []).map((l) => m(l)), U = () => (_(), n.modelAuto ? C() : n.multiDates ? w() : Array.isArray(t.value) ? I(() => y()) : m(Se(t.value))), X = (l) => l ? n.timePicker ? N(Se(l)) : n.monthPicker ? x(Se(l)) : n.yearPicker ? B(Se(l)) : n.multiDates ? ne(Se(l)) : n.weekPicker ? le(Se(l)) : de(Se(l)) : null, J = (l) => {
    const G = X(l);
    L(Se(G)) ? (t.value = Se(G), r()) : (t.value = null, A.value = "");
  }, T = () => {
    var G;
    const l = (be) => {
      var De;
      return kt(be, (De = d.value.textInputOptions) == null ? void 0 : De.format);
    };
    return `${l(t.value[0])} ${(G = d.value.textInputOptions) == null ? void 0 : G.rangeSeparator} ${t.value[1] ? l(t.value[1]) : ""}`;
  }, P = () => {
    var l;
    return a.value && t.value ? Array.isArray(t.value) ? T() : kt(t.value, (l = d.value.textInputOptions) == null ? void 0 : l.format) : p(t.value);
  }, u = () => {
    var l;
    return t.value ? n.multiDates ? t.value.map((G) => p(G)).join("; ") : n.textInput && typeof ((l = d.value.textInputOptions) == null ? void 0 : l.format) == "string" ? P() : p(t.value) : "";
  }, r = () => {
    !n.format || typeof n.format == "string" ? A.value = u() : A.value = n.format(t.value);
  }, v = (l) => {
    if (n.utc) {
      const G = new Date(l);
      return n.utc === "preserve" ? new Date(G.getTime() + G.getTimezoneOffset() * 6e4) : G;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? c(new Date(l)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? an(l, $(), new Date()) : c(an(l, n.modelType, new Date())) : c(new Date(l));
  }, m = (l) => l ? n.utc ? va(l, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +s(l) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? p(s(l)) : p(s(l), n.modelType) : s(l) : "", k = (l) => {
    e("update:model-value", l);
  }, K = (l) => Array.isArray(t.value) ? [
    l(t.value[0]),
    t.value[1] ? l(t.value[1]) : O()
  ] : l(Se(t.value)), Z = (l) => k(Se(K(l)));
  return {
    inputValue: A,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: J,
    formatInputValue: r,
    emitModelValue: () => (r(), n.monthPicker ? Z(Q) : n.timePicker ? Z(Y) : n.yearPicker ? Z(pe) : n.weekPicker ? k(t.value) : k(U()))
  };
}, er = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: s, defaults: c } = Le(e), p = (S, d) => {
    let A = S;
    return c.value.filters.months.includes(he(A)) ? (A = d ? st(S, 1) : wt(S, 1), p(A, d)) : A;
  }, $ = (S, d) => {
    let A = S;
    return c.value.filters.years.includes(pe(A)) ? (A = d ? ia(S, 1) : ua(S, 1), $(A, d)) : A;
  }, I = (S) => {
    const d = Be(new Date(), { month: e.month, year: e.year });
    let A = S ? st(d, 1) : wt(d, 1), z = he(A), Y = pe(A);
    c.value.filters.months.includes(z) && (A = p(A, S), z = he(A), Y = pe(A)), c.value.filters.years.includes(Y) && (A = $(A, S), Y = pe(A)), a(z, Y, S, e.preventMinMaxNavigation) && O(z, Y);
  }, O = (S, d) => {
    n("update-month-year", { month: S, year: d });
  }, L = V(() => (S) => {
    if (!e.preventMinMaxNavigation || S && !e.maxDate || !S && !e.minDate)
      return !1;
    const d = Be(new Date(), { month: e.month, year: e.year }), A = S ? st(d, 1) : wt(d, 1), z = [he(A), pe(A)];
    return S ? !t(...z) : !s(...z);
  });
  return { handleMonthYearChange: I, isDisabled: L, updateMonthYear: O };
};
var Rt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Rt || {});
const tr = (e, n, a, t) => {
  const s = F({
    top: "0",
    left: "0",
    transform: "none"
  }), c = F(!1), p = Ot(t, "teleportCenter");
  dt(p, () => {
    Y();
  });
  const $ = (_) => {
    if (t.teleport) {
      const y = _.getBoundingClientRect();
      return {
        left: y.left + window.scrollX,
        top: y.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, I = (_, y) => {
    s.value.left = `${_ + y}px`, s.value.transform = "translateX(-100%)";
  }, O = (_) => {
    s.value.left = `${_}px`, s.value.transform = "translateX(0)";
  }, L = (_, y, C = !1) => {
    t.position === Rt.left && O(_), t.position === Rt.right && I(_, y), t.position === Rt.center && (s.value.left = `${_ + y / 2}px`, s.value.transform = C ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, S = (_) => {
    const { width: y, height: C } = _.getBoundingClientRect(), { top: w, left: U } = t.altPosition ? t.altPosition(_) : $(_);
    return { top: +w, left: +U, width: y, height: C };
  }, d = () => {
    const _ = Te(n);
    if (_) {
      const { top: y, left: C, width: w, height: U } = S(_);
      s.value.top = `${y + U / 2}px`, s.value.transform = "translateY(-50%)", L(C, w, !0);
    }
  }, A = () => {
    s.value.left = "50%", s.value.top = "50%", s.value.transform = "translate(-50%, -50%)", s.value.position = "fixed";
  }, z = () => {
    const _ = Te(n), { top: y, left: C, transform: w } = t.altPosition(_);
    s.value = { top: `${y}px`, left: `${C}px`, transform: w || "" };
  }, Y = (_ = !0) => {
    if (!t.inline)
      return p.value ? A() : t.altPosition !== null ? z() : (_ && a("recalculate-position"), ne());
  }, Q = ({
    inputEl: _,
    menuEl: y,
    left: C,
    width: w
  }) => {
    window.screen.width > 768 && L(C, w), N(_, y);
  }, B = (_, y) => {
    const { top: C, left: w, height: U, width: X } = S(_);
    s.value.top = `${U + C + +t.offset}px`, Q({ inputEl: _, menuEl: y, left: w, width: X }), c.value = !1;
  }, E = (_, y) => {
    const { top: C, left: w, width: U } = S(_), { height: X } = y.getBoundingClientRect();
    s.value.top = `${C - X - +t.offset}px`, Q({ inputEl: _, menuEl: y, left: w, width: U }), c.value = !0;
  }, N = (_, y) => {
    if (t.autoPosition) {
      const { left: C, width: w } = S(_), { left: U, right: X } = y.getBoundingClientRect();
      return U <= 0 || U <= C ? O(C) : X >= document.documentElement.clientWidth ? I(C, w) : L(C, w);
    }
  }, x = (_, y) => {
    const { height: C } = y.getBoundingClientRect(), { top: w, height: U } = _.getBoundingClientRect(), J = window.innerHeight - w - U, T = w;
    return C <= J ? B(_, y) : C > J && C <= T ? E(_, y) : J >= T ? B(_, y) : E(_, y);
  }, ne = () => {
    const _ = Te(n), y = Te(e);
    if (_ && y)
      return t.autoPosition ? x(_, y) : B(_, y);
  }, le = function(_) {
    if (_) {
      const y = _.scrollHeight > _.clientHeight, w = window.getComputedStyle(_).overflowY.indexOf("hidden") !== -1;
      return y && !w;
    }
    return !0;
  }, de = function(_) {
    return !_ || _ === document.body ? window : le(_) ? _ : de(_.parentNode);
  };
  return { openOnTop: c, menuPosition: s, setMenuPosition: Y, setInitialPosition: d, getScrollableParent: de };
}, ft = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], nr = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], ar = {
  all: () => ft,
  monthYear: () => ft.filter((e) => e.use.includes("month-year")),
  input: () => nr,
  timePicker: () => ft.filter((e) => e.use.includes("time")),
  action: () => ft.filter((e) => e.use.includes("action")),
  calendar: () => ft.filter((e) => e.use.includes("calendar")),
  menu: () => ft.filter((e) => e.use.includes("menu"))
}, it = (e, n, a) => {
  const t = [];
  return ar[n]().forEach((s) => {
    e[s.name] && t.push(s.name);
  }), a && a.length && a.forEach((s) => {
    s.slot && t.push(s.slot);
  }), t;
}, Ft = (e) => ({ transitionName: V(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), at = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, rr = ["aria-label", "aria-disabled", "aria-readonly"], lr = {
  key: 1,
  class: "dp__input_wrap"
}, or = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], sr = {
  key: 2,
  class: "dp__input_icon"
}, ir = {
  key: 4,
  class: "dp__clear_icon"
}, ur = /* @__PURE__ */ We({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...at
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: s, isValidDate: c, defaults: p } = Le(t), $ = F(), I = F(null), O = F(!1), L = V(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: O.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), S = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), $.value = null);
    }, d = (y) => {
      var C;
      return fa(y, ((C = p.value.textInputOptions) == null ? void 0 : C.format) || s());
    }, A = (y) => {
      const { rangeSeparator: C } = p.value.textInputOptions, [w, U] = y.split(`${C}`);
      if (w) {
        const X = d(w.trim()), J = U ? d(U.trim()) : null, T = X && J ? [X, J] : [X];
        $.value = X ? T : null;
      }
    }, z = (y) => {
      if (t.range)
        A(y);
      else if (t.multiDates) {
        const C = y.split(";");
        $.value = C.map((w) => d(w.trim())).filter((w) => w);
      } else
        $.value = d(y);
    }, Y = (y) => {
      var w;
      const { value: C } = y.target;
      C !== "" ? ((w = p.value.textInputOptions) != null && w.openMenu && !t.isMenuOpen && a("open"), z(C), a("set-input-date", $.value)) : S(), a("update:input-value", C);
    }, Q = () => {
      var y, C;
      (y = p.value.textInputOptions) != null && y.enterSubmit && c($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : (C = p.value.textInputOptions) != null && C.enterSubmit && t.inputValue === "" && ($.value = null, a("clear"));
    }, B = () => {
      var y, C;
      (y = p.value.textInputOptions) != null && y.tabSubmit && c($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : (C = p.value.textInputOptions) != null && C.tabSubmit && t.inputValue === "" && ($.value = null, a("clear"));
    }, E = () => {
      O.value = !0, a("focus");
    }, N = (y) => {
      var C;
      y.preventDefault(), y.stopImmediatePropagation(), y.stopPropagation(), t.textInput && ((C = p.value.textInputOptions) != null && C.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? p.value.textInputOptions.enterSubmit && a("select-date") : a("open") : t.textInput || a("toggle");
    }, x = () => {
      O.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && $.value && (a("set-input-date", $.value), a("select-date"), $.value = null);
    }, ne = () => {
      a("clear");
    }, le = (y) => {
      t.textInput || y.preventDefault();
    };
    return n({
      focusInput: () => {
        I.value && I.value.focus({ preventScroll: !0 });
      },
      setParsedDate: (y) => {
        $.value = y;
      }
    }), (y, C) => {
      var w;
      return h(), R("div", {
        onClick: N,
        "aria-label": (w = i(p).ariaLabels) == null ? void 0 : w.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": y.disabled,
        "aria-readonly": y.readonly
      }, [
        y.$slots.trigger && !y.$slots["dp-input"] && !y.inline ? W(y.$slots, "trigger", { key: 0 }) : M("", !0),
        !y.$slots.trigger && (!y.inline || y.inlineWithInput) ? (h(), R("div", lr, [
          y.$slots["dp-input"] && !y.$slots.trigger && !y.inline ? W(y.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: Y,
            onEnter: Q,
            onTab: B,
            onClear: ne
          }) : M("", !0),
          y.$slots["dp-input"] ? M("", !0) : (h(), R("input", {
            key: 1,
            ref_key: "inputRef",
            ref: I,
            id: y.uid ? `dp-input-${y.uid}` : void 0,
            name: y.name,
            class: ye(i(L)),
            inputmode: y.textInput ? "text" : "none",
            placeholder: y.placeholder,
            disabled: y.disabled,
            readonly: y.readonly,
            required: y.required,
            value: e.inputValue,
            autocomplete: y.autocomplete,
            onInput: Y,
            onKeydown: [
              ie(N, ["enter"]),
              ie(B, ["tab"]),
              le
            ],
            onBlur: x,
            onFocus: E,
            onKeypress: le
          }, null, 42, or)),
          y.$slots["input-icon"] && !y.hideInputIcon ? (h(), R("span", sr, [
            W(y.$slots, "input-icon")
          ])) : M("", !0),
          !y.$slots["input-icon"] && !y.hideInputIcon && !y.$slots["dp-input"] ? (h(), fe(i(Lt), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : M("", !0),
          y.$slots["clear-icon"] && e.inputValue && y.clearable && !y.disabled && !y.readonly ? (h(), R("span", ir, [
            W(y.$slots, "clear-icon", { clear: ne })
          ])) : M("", !0),
          y.clearable && !y.$slots["clear-icon"] && e.inputValue && !y.disabled && !y.readonly ? (h(), fe(i(ca), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: Je(ne, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : M("", !0)
        ])) : M("", !0)
      ], 8, rr);
    };
  }
}), dr = { class: "dp__selection_preview" }, cr = { class: "dp__action_buttons" }, fr = ["onKeydown"], vr = /* @__PURE__ */ We({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: s, defaults: c } = Le(a), { buildMatrix: p } = nt(), $ = F(null), I = F(null);
    He(() => {
      a.arrowNavigation && p([Te($), Te(I)], "actionRow");
    });
    const O = V(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), L = V(() => !d.value || !A.value || !O.value), S = V(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: L.value
    })), d = V(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : s(a.internalModelValue)), A = V(() => a.monthPicker ? B(a.internalModelValue) : !0), z = () => {
      const N = c.value.previewFormat;
      return a.timePicker || a.monthPicker, N(Se(a.internalModelValue));
    }, Y = () => {
      const N = a.internalModelValue;
      return c.value.multiCalendars > 0 ? `${t(N[0])} - ${t(N[1])}` : [t(N[0]), t(N[1])];
    }, Q = V(() => !a.internalModelValue || !a.menuMount ? "" : typeof c.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? Y() : a.multiDates ? a.internalModelValue.map((N) => `${t(N)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : z()), B = (N) => {
      if (!a.monthPicker)
        return !0;
      let x = !0;
      return a.minDate && a.maxDate ? Ve(D(N), D(a.minDate)) && Re(D(N), D(a.maxDate)) : (a.minDate && (x = Ve(D(N), D(a.minDate))), a.maxDate && (x = Re(D(N), D(a.maxDate))), x);
    }, E = () => {
      d.value && A.value && O.value ? n("select-date") : n("invalid-select");
    };
    return (N, x) => (h(), R("div", {
      class: "dp__action_row",
      style: ot(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      N.$slots["action-row"] ? W(N.$slots, "action-row", Ne(Pe({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: i(L),
        selectDate: () => N.$emit("select-date"),
        closePicker: () => N.$emit("close-picker")
      }))) : (h(), R(ue, { key: 1 }, [
        te("div", dr, [
          N.$slots["action-preview"] ? W(N.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : M("", !0),
          N.$slots["action-preview"] ? M("", !0) : (h(), R(ue, { key: 1 }, [
            Array.isArray(i(Q)) ? M("", !0) : (h(), R(ue, { key: 0 }, [
              je(_e(i(Q)), 1)
            ], 64)),
            Array.isArray(i(Q)) ? (h(!0), R(ue, { key: 1 }, Me(i(Q), (ne, le) => (h(), R("div", { key: le }, _e(ne), 1))), 128)) : M("", !0)
          ], 64))
        ]),
        te("div", cr, [
          N.$slots["action-select"] ? W(N.$slots, "action-select", {
            key: 0,
            value: e.internalModelValue
          }) : M("", !0),
          N.$slots["action-select"] ? M("", !0) : (h(), R(ue, { key: 1 }, [
            N.inline ? M("", !0) : (h(), R("span", {
              key: 0,
              class: "dp__action dp__cancel",
              ref_key: "cancelButtonRef",
              ref: $,
              tabindex: "0",
              onClick: x[0] || (x[0] = (ne) => N.$emit("close-picker")),
              onKeydown: [
                x[1] || (x[1] = ie((ne) => N.$emit("close-picker"), ["enter"])),
                x[2] || (x[2] = ie((ne) => N.$emit("close-picker"), ["space"]))
              ]
            }, _e(N.cancelText), 545)),
            te("span", {
              class: ye(i(S)),
              tabindex: "0",
              onKeydown: [
                ie(E, ["enter"]),
                ie(E, ["space"])
              ],
              onClick: E,
              "data-test": "select-button",
              ref_key: "selectButtonRef",
              ref: I
            }, _e(N.selectText), 43, fr)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), mr = ["aria-label"], yr = {
  class: "dp__calendar_header",
  role: "row"
}, gr = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, hr = /* @__PURE__ */ te("div", { class: "dp__calendar_header_separator" }, null, -1), pr = ["aria-label"], kr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, wr = { class: "dp__cell_inner" }, br = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], Dr = /* @__PURE__ */ te("div", { class: "dp__arrow_bottom_tp" }, null, -1), $r = /* @__PURE__ */ We({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...at
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: s } = nt(), { setDateMonthOrYear: c, defaults: p } = Le(t), $ = F(null), I = F({ bottom: "", left: "", transform: "" }), O = F([]), L = F(null), S = F(!0), d = F(""), A = F({ startX: 0, endX: 0, startY: 0, endY: 0 }), z = V(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Ua(t.locale, +t.weekStart));
    He(() => {
      a("mount", { cmp: "calendar", refs: O }), t.noSwipe || L.value && (L.value.addEventListener("touchstart", y, { passive: !1 }), L.value.addEventListener("touchend", C, { passive: !1 }), L.value.addEventListener("touchmove", w, { passive: !1 })), t.monthChangeOnScroll && L.value && L.value.addEventListener("wheel", J, { passive: !1 });
    });
    const Y = (T) => T ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", Q = (T, P) => {
      if (t.transitions) {
        const u = xe(c(D(), t.month, t.year));
        d.value = Ve(xe(c(D(), T, P)), u) ? p.value.transitions[Y(!0)] : p.value.transitions[Y(!1)], S.value = !1, mt(() => {
          S.value = !0;
        });
      }
    }, B = V(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), E = V(() => (T) => {
      const P = Ka(T);
      return {
        dp__marker_dot: P.type === "dot",
        dp__marker_line: P.type === "line"
      };
    }), N = V(() => (T) => ke(T, $.value)), x = V(() => ({
      dp__calendar: !0,
      dp__calendar_next: p.value.multiCalendars > 0 && t.instance !== 0
    })), ne = V(() => (T) => t.hideOffsetDates ? T.current : !0), le = V(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), de = (T, P, u) => {
      var r, v;
      if (a("set-hover-date", T), (v = (r = T.marker) == null ? void 0 : r.tooltip) != null && v.length) {
        const m = Te(O.value[P][u]);
        if (m) {
          const { width: k, height: K } = m.getBoundingClientRect();
          I.value = {
            bottom: `${K}px`,
            left: `${k / 2}px`,
            transform: "translateX(-50%)"
          }, $.value = T.value, a("tooltip-open", T.marker);
        }
      }
    }, _ = (T) => {
      $.value && ($.value = null, a("tooltip-close", T.marker));
    }, y = (T) => {
      A.value.startX = T.changedTouches[0].screenX, A.value.startY = T.changedTouches[0].screenY;
    }, C = (T) => {
      A.value.endX = T.changedTouches[0].screenX, A.value.endY = T.changedTouches[0].screenY, U();
    }, w = (T) => {
      t.vertical && !t.inline && T.preventDefault();
    }, U = () => {
      const T = t.vertical ? "Y" : "X";
      Math.abs(A.value[`start${T}`] - A.value[`end${T}`]) > 10 && a("handle-swipe", A.value[`start${T}`] > A.value[`end${T}`] ? "right" : "left");
    }, X = (T, P, u) => {
      T && (Array.isArray(O.value[P]) ? O.value[P][u] = T : O.value[P] = [T]), t.arrowNavigation && s(O.value, "calendar");
    }, J = (T) => {
      t.monthChangeOnScroll && (T.preventDefault(), a("handle-scroll", T));
    };
    return n({ triggerTransition: Q }), (T, P) => {
      var u;
      return h(), R("div", {
        class: ye(i(x))
      }, [
        te("div", {
          style: ot(i(le))
        }, [
          e.specificMode ? M("", !0) : (h(), R("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: L,
            class: ye(i(B)),
            role: "grid",
            "aria-label": (u = i(p).ariaLabels) == null ? void 0 : u.calendarWrap
          }, [
            te("div", yr, [
              T.weekNumbers ? (h(), R("div", gr, _e(T.weekNumName), 1)) : M("", !0),
              (h(!0), R(ue, null, Me(i(z), (r, v) => (h(), R("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: v,
                "data-test": "calendar-header"
              }, [
                T.$slots["calendar-header"] ? W(T.$slots, "calendar-header", {
                  key: 0,
                  day: r,
                  index: v
                }) : M("", !0),
                T.$slots["calendar-header"] ? M("", !0) : (h(), R(ue, { key: 1 }, [
                  je(_e(r), 1)
                ], 64))
              ]))), 128))
            ]),
            hr,
            tt(gt, {
              name: d.value,
              css: !!T.transitions
            }, {
              default: oe(() => {
                var r;
                return [
                  S.value ? (h(), R("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (r = i(p).ariaLabels) == null ? void 0 : r.calendarDays
                  }, [
                    (h(!0), R(ue, null, Me(e.mappedDates, (v, m) => (h(), R("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: m
                    }, [
                      T.weekNumbers ? (h(), R("div", kr, [
                        te("div", wr, _e(e.getWeekNum(v.days)), 1)
                      ])) : M("", !0),
                      (h(!0), R(ue, null, Me(v.days, (k, K) => {
                        var Z, ce, f;
                        return h(), R("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (l) => X(l, m, K),
                          key: K + m,
                          "aria-selected": k.classData.dp__active_date || k.classData.dp__range_start || k.classData.dp__range_start,
                          "aria-disabled": k.classData.dp__cell_disabled,
                          "aria-label": (ce = (Z = i(p).ariaLabels) == null ? void 0 : Z.day) == null ? void 0 : ce.call(Z, k),
                          tabindex: "0",
                          "data-test": k.value,
                          onClick: Je((l) => T.$emit("select-date", k), ["stop", "prevent"]),
                          onKeydown: [
                            ie((l) => T.$emit("select-date", k), ["enter"]),
                            ie((l) => T.$emit("handle-space", k), ["space"])
                          ],
                          onMouseenter: (l) => de(k, m, K),
                          onMouseleave: (l) => _(k)
                        }, [
                          te("div", {
                            class: ye(["dp__cell_inner", k.classData])
                          }, [
                            T.$slots.day && i(ne)(k) ? W(T.$slots, "day", {
                              key: 0,
                              day: +k.text,
                              date: k.value
                            }) : M("", !0),
                            T.$slots.day ? M("", !0) : (h(), R(ue, { key: 1 }, [
                              je(_e(k.text), 1)
                            ], 64)),
                            k.marker && i(ne)(k) ? (h(), R("div", {
                              key: 2,
                              class: ye(i(E)(k.marker)),
                              style: ot(k.marker.color ? { backgroundColor: k.marker.color } : {})
                            }, null, 6)) : M("", !0),
                            i(N)(k.value) ? (h(), R("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              style: ot(I.value)
                            }, [
                              (f = k.marker) != null && f.tooltip ? (h(), R("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: P[0] || (P[0] = Je(() => {
                                }, ["stop"]))
                              }, [
                                (h(!0), R(ue, null, Me(k.marker.tooltip, (l, G) => (h(), R("div", {
                                  key: G,
                                  class: "dp__tooltip_text"
                                }, [
                                  T.$slots["marker-tooltip"] ? W(T.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: l,
                                    day: k.value
                                  }) : M("", !0),
                                  T.$slots["marker-tooltip"] ? M("", !0) : (h(), R(ue, { key: 1 }, [
                                    te("div", {
                                      class: "dp__tooltip_mark",
                                      style: ot(l.color ? { backgroundColor: l.color } : {})
                                    }, null, 4),
                                    te("div", null, _e(l.text), 1)
                                  ], 64))
                                ]))), 128)),
                                Dr
                              ])) : M("", !0)
                            ], 4)) : M("", !0)
                          ], 2)
                        ], 40, br);
                      }), 128))
                    ]))), 128))
                  ], 8, pr)) : M("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, mr))
        ], 4)
      ], 2);
    };
  }
}), Mr = ["aria-label", "aria-disabled"], tn = /* @__PURE__ */ We({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = F(null);
    return He(() => n("set-ref", a)), (t, s) => (h(), R("div", {
      class: "dp__month_year_col_nav",
      onClick: s[0] || (s[0] = (c) => t.$emit("activate")),
      onKeydown: [
        s[1] || (s[1] = ie((c) => t.$emit("activate"), ["enter"])),
        s[2] || (s[2] = ie((c) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      te("div", {
        class: ye(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        W(t.$slots, "default")
      ], 2)
    ], 40, Mr));
  }
}), Tr = ["onKeydown"], Ar = { class: "dp__selection_grid_header" }, Sr = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], Pr = ["aria-label", "onKeydown"], bt = /* @__PURE__ */ We({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: s, buildMultiLevelMatrix: c, setMonthPicker: p } = nt(), { hideNavigationButtons: $ } = Le(t), I = F(!1), O = F(null), L = F(null), S = F([]), d = F(), A = F(null), z = F(0), Y = F(null);
    qn(() => {
      O.value = null;
    }), He(() => {
      mt().then(() => y()), B(), Q(!0);
    }), on(() => Q(!1));
    const Q = (P) => {
      var u;
      t.arrowNavigation && ((u = t.headerRefs) != null && u.length ? p(P) : s(P));
    }, B = () => {
      const P = Te(L);
      P && (t.textInput || P.focus({ preventScroll: !0 }), I.value = P.clientHeight < P.scrollHeight);
    }, E = V(
      () => ({
        dp__overlay: !0
      })
    ), N = V(() => ({
      dp__overlay_col: !0
    })), x = (P) => t.skipActive ? !1 : P.value === t.modelValue, ne = V(() => t.items.map((P) => P.filter((u) => u).map((u) => {
      var m, k, K;
      const r = t.disabledValues.some((Z) => Z === u.value) || _(u.value), v = (m = t.multiModelValue) != null && m.length ? (k = t.multiModelValue) == null ? void 0 : k.some(
        (Z) => ke(
          Z,
          ut(
            t.monthPicker ? Nt(new Date(), u.value) : new Date(),
            t.monthPicker ? t.year : u.value
          )
        )
      ) : x(u);
      return {
        ...u,
        className: {
          dp__overlay_cell_active: v,
          dp__overlay_cell: !v,
          dp__overlay_cell_disabled: r,
          dp__overlay_cell_active_disabled: r && v,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (K = t.multiModelValue) != null && K.length ? w(u.value) : !1
        }
      };
    }))), le = V(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: I.value,
        dp__button_bottom: t.autoApply
      })
    ), de = V(() => {
      var P, u;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((P = t.items) == null ? void 0 : P.length) <= 6,
        dp__container_block: ((u = t.items) == null ? void 0 : u.length) > 6
      };
    }), _ = (P) => {
      const u = t.maxValue || t.maxValue === 0, r = t.minValue || t.minValue === 0;
      return !u && !r ? !1 : u && r ? +P > +t.maxValue || +P < +t.minValue : u ? +P > +t.maxValue : r ? +P < +t.minValue : !1;
    }, y = () => {
      const P = Te(O), u = Te(L), r = Te(A), v = Te(Y), m = r ? r.getBoundingClientRect().height : 0;
      u && (z.value = u.getBoundingClientRect().height - m), P && v && (v.scrollTop = P.offsetTop - v.offsetTop - (z.value / 2 - P.getBoundingClientRect().height) - m);
    }, C = (P) => {
      !t.disabledValues.some((u) => u === P) && !_(P) && (a("update:model-value", P), a("selected"));
    }, w = (P) => {
      const u = t.monthPicker ? t.year : P;
      return zn(
        t.multiModelValue,
        ut(
          t.monthPicker ? Nt(new Date(), d.value || 0) : new Date(),
          t.monthPicker ? u : d.value || u
        ),
        ut(t.monthPicker ? Nt(new Date(), P) : new Date(), u)
      );
    }, U = () => {
      a("toggle"), a("reset-flow");
    }, X = () => {
      t.escClose && U();
    }, J = (P, u, r, v) => {
      P && (u.value === +t.modelValue && !t.disabledValues.includes(u.value) && (O.value = P), t.arrowNavigation && (Array.isArray(S.value[r]) ? S.value[r][v] = P : S.value[r] = [P], T()));
    }, T = () => {
      var u, r;
      const P = (u = t.headerRefs) != null && u.length ? [t.headerRefs].concat(S.value) : S.value.concat([t.skipButtonRef ? [] : [A.value]]);
      c(Se(P), (r = t.headerRefs) != null && r.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: B }), (P, u) => {
      var r;
      return h(), R("div", {
        ref_key: "gridWrapRef",
        ref: L,
        class: ye(i(E)),
        role: "dialog",
        tabindex: "0",
        onKeydown: ie(X, ["esc"])
      }, [
        te("div", {
          class: ye(i(de)),
          ref_key: "containerRef",
          ref: Y,
          role: "grid",
          style: ot({ height: `${z.value}px` })
        }, [
          te("div", Ar, [
            W(P.$slots, "header")
          ]),
          P.$slots.overlay ? W(P.$slots, "overlay", { key: 0 }) : (h(!0), R(ue, { key: 1 }, Me(i(ne), (v, m) => (h(), R("div", {
            class: "dp__overlay_row",
            key: m,
            role: "row"
          }, [
            (h(!0), R(ue, null, Me(v, (k, K) => (h(), R("div", {
              role: "gridcell",
              class: ye(i(N)),
              key: k.value,
              "aria-selected": k.value === e.modelValue && !e.disabledValues.includes(k.value),
              "aria-disabled": k.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (Z) => J(Z, k, m, K),
              tabindex: "0",
              "data-test": k.text,
              onClick: (Z) => C(k.value),
              onKeydown: [
                ie((Z) => C(k.value), ["enter"]),
                ie((Z) => C(k.value), ["space"])
              ],
              onMouseover: (Z) => d.value = k.value
            }, [
              te("div", {
                class: ye(k.className)
              }, [
                P.$slots.item ? W(P.$slots, "item", {
                  key: 0,
                  item: k
                }) : M("", !0),
                P.$slots.item ? M("", !0) : (h(), R(ue, { key: 1 }, [
                  je(_e(k.text), 1)
                ], 64))
              ], 2)
            ], 42, Sr))), 128))
          ]))), 128))
        ], 6),
        P.$slots["button-icon"] ? Pt((h(), R("div", {
          key: 0,
          role: "button",
          "aria-label": (r = e.ariaLabels) == null ? void 0 : r.toggleOverlay,
          class: ye(i(le)),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: A,
          onClick: U,
          onKeydown: ie(U, ["enter"])
        }, [
          W(P.$slots, "button-icon")
        ], 42, Pr)), [
          [Ct, !i($)(e.type)]
        ]) : M("", !0)
      ], 42, Tr);
    };
  }
}), Cr = ["aria-label"], In = /* @__PURE__ */ We({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: s } = Ft(a.transitions), c = F(null);
    return He(() => n("set-ref", c)), (p, $) => (h(), R(ue, null, [
      te("div", {
        class: "dp__month_year_select",
        onClick: $[0] || ($[0] = (I) => p.$emit("toggle")),
        onKeydown: [
          $[1] || ($[1] = ie((I) => p.$emit("toggle"), ["enter"])),
          $[2] || ($[2] = ie((I) => p.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: c
      }, [
        W(p.$slots, "default")
      ], 40, Cr),
      tt(gt, {
        name: i(t)(e.showSelectionGrid),
        css: i(s)
      }, {
        default: oe(() => [
          e.showSelectionGrid ? (h(), fe(bt, Pe({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": $[3] || ($[3] = (I) => p.$emit("update:model-value", I)),
            onToggle: $[4] || ($[4] = (I) => p.$emit("toggle"))
          }), Ee({
            "button-icon": oe(() => [
              p.$slots["calendar-icon"] ? W(p.$slots, "calendar-icon", { key: 0 }) : M("", !0),
              p.$slots["calendar-icon"] ? M("", !0) : (h(), fe(i(Lt), { key: 1 }))
            ]),
            _: 2
          }, [
            p.$slots[e.slotName] ? {
              name: "item",
              fn: oe(({ item: I }) => [
                W(p.$slots, e.slotName, { item: I })
              ]),
              key: "0"
            } : void 0,
            p.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: oe(() => [
                W(p.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            p.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: oe(() => [
                W(p.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : M("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), _r = { class: "dp__month_year_row" }, Nr = { class: "dp__month_year_wrap" }, Rr = { class: "dp__month_picker_header" }, Or = ["aria-label"], Ir = ["aria-label"], Br = ["aria-label"], Yr = /* @__PURE__ */ We({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: s } = Le(t), { transitionName: c, showTransition: p } = Ft(s.value.transitions), { buildMatrix: $ } = nt(), { handleMonthYearChange: I, isDisabled: O, updateMonthYear: L } = er(t, a), S = F(!1), d = F(!1), A = F([null, null, null, null]), z = F(null), Y = F(null), Q = F(null);
    He(() => {
      a("mount");
    });
    const B = (f) => ({
      get: () => t[f],
      set: (l) => {
        const G = f === "month" ? "year" : "month";
        a("update-month-year", { [f]: l, [G]: t[G] }), a("month-year-select", f === "year"), f === "month" ? m(!0) : k(!0);
      }
    }), E = V(B("month")), N = V(B("year")), x = (f) => {
      const l = pe(D(f));
      return t.year === l;
    }, ne = V(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((f) => D(f)).filter((f) => x(f)).map((f) => he(f)) : [] : []), le = V(() => (f) => {
      const l = f === "month";
      return {
        showSelectionGrid: (l ? S : d).value,
        items: (l ? P : u).value,
        disabledValues: s.value.filters[l ? "months" : "years"].concat(ne.value),
        minValue: (l ? C : _).value,
        maxValue: (l ? w : y).value,
        headerRefs: l && t.monthPicker ? [z.value, Y.value, Q.value] : [],
        escClose: t.escClose,
        transitions: s.value.transitions,
        ariaLabels: s.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), de = V(() => (f) => ({
      month: t.month,
      year: t.year,
      items: f === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: L,
      toggle: f === "month" ? m : k
    })), _ = V(() => t.minDate ? pe(D(t.minDate)) : null), y = V(() => t.maxDate ? pe(D(t.maxDate)) : null), C = V(() => {
      if (t.minDate && _.value) {
        if (_.value > t.year)
          return 12;
        if (_.value === t.year)
          return he(D(t.minDate));
      }
      return null;
    }), w = V(() => t.maxDate && y.value ? y.value < t.year ? -1 : y.value === t.year ? he(D(t.maxDate)) : null : null), U = V(() => t.range && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), X = (f) => f.reverse(), J = (f, l = !1) => {
      const G = [], be = (De) => l ? X(De) : De;
      for (let De = 0; De < f.length; De += 3) {
        const ze = [f[De], f[De + 1], f[De + 2]];
        G.push(be(ze));
      }
      return l ? G.reverse() : G;
    }, T = V(() => {
      const f = t.months.find((l) => l.value === t.month);
      return f || { text: "", value: 0 };
    }), P = V(() => J(t.months)), u = V(() => J(t.years, t.reverseYears)), r = V(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), v = V(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === s.value.multiCalendars - 1 : !0), m = (f = !1) => {
      K(f), S.value = !S.value, S.value || a("overlay-closed");
    }, k = (f = !1) => {
      K(f), d.value = !d.value, d.value || a("overlay-closed");
    }, K = (f) => {
      f || a("reset-flow");
    }, Z = (f = !1) => {
      O.value(f) || a("update-month-year", {
        year: f ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, ce = (f, l) => {
      t.arrowNavigation && (A.value[l] = Te(f), $(A.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: m,
      toggleYearPicker: k,
      handleMonthYearChange: I
    }), (f, l) => {
      var G, be, De, ze, Qe;
      return h(), R("div", _r, [
        f.$slots["month-year"] ? W(f.$slots, "month-year", Ne(Pe({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: i(L), handleMonthYearChange: i(I), instance: e.instance }))) : (h(), R(ue, { key: 1 }, [
          !f.monthPicker && !f.yearPicker ? (h(), R(ue, { key: 0 }, [
            i(r) && !f.vertical ? (h(), fe(tn, {
              key: 0,
              "aria-label": (G = i(s).ariaLabels) == null ? void 0 : G.prevMonth,
              disabled: i(O)(!1),
              onActivate: l[0] || (l[0] = (ae) => i(I)(!1)),
              onSetRef: l[1] || (l[1] = (ae) => ce(ae, 0))
            }, {
              default: oe(() => [
                f.$slots["arrow-left"] ? W(f.$slots, "arrow-left", { key: 0 }) : M("", !0),
                f.$slots["arrow-left"] ? M("", !0) : (h(), fe(i(kn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : M("", !0),
            te("div", Nr, [
              tt(In, Pe({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (be = i(s).ariaLabels) == null ? void 0 : be.openMonthsOverlay,
                modelValue: i(E),
                "onUpdate:modelValue": l[2] || (l[2] = (ae) => lt(E) ? E.value = ae : null)
              }, i(le)("month"), {
                onToggle: m,
                onSetRef: l[3] || (l[3] = (ae) => ce(ae, 1))
              }), Ee({
                default: oe(() => [
                  f.$slots.month ? W(f.$slots, "month", Ne(Pe({ key: 0 }, i(T)))) : M("", !0),
                  f.$slots.month ? M("", !0) : (h(), R(ue, { key: 1 }, [
                    je(_e(i(T).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                f.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: oe(() => [
                    W(f.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                f.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: oe(({ item: ae }) => [
                    W(f.$slots, "month-overlay-value", {
                      text: ae.text,
                      value: ae.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                f.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: oe(() => [
                    W(f.$slots, "month-overlay", Ne(Ue(i(de)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                f.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: oe(() => [
                    W(f.$slots, "month-overlay-header", { toggle: m })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              tt(In, Pe({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (De = i(s).ariaLabels) == null ? void 0 : De.openYearsOverlay,
                modelValue: i(N),
                "onUpdate:modelValue": l[4] || (l[4] = (ae) => lt(N) ? N.value = ae : null)
              }, i(le)("year"), {
                onToggle: k,
                onSetRef: l[5] || (l[5] = (ae) => ce(ae, 2))
              }), Ee({
                default: oe(() => [
                  f.$slots.year ? W(f.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : M("", !0),
                  f.$slots.year ? M("", !0) : (h(), R(ue, { key: 1 }, [
                    je(_e(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                f.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: oe(() => [
                    W(f.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                f.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: oe(({ item: ae }) => [
                    W(f.$slots, "year-overlay-value", {
                      text: ae.text,
                      value: ae.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                f.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: oe(() => [
                    W(f.$slots, "year-overlay", Ne(Ue(i(de)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                f.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: oe(() => [
                    W(f.$slots, "year-overlay-header", { toggle: k })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            i(r) && f.vertical ? (h(), fe(tn, {
              key: 1,
              "aria-label": (ze = i(s).ariaLabels) == null ? void 0 : ze.prevMonth,
              disabled: i(O)(!1),
              onActivate: l[6] || (l[6] = (ae) => i(I)(!1))
            }, {
              default: oe(() => [
                f.$slots["arrow-up"] ? W(f.$slots, "arrow-up", { key: 0 }) : M("", !0),
                f.$slots["arrow-up"] ? M("", !0) : (h(), fe(i(Hn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : M("", !0),
            i(v) ? (h(), fe(tn, {
              key: 2,
              ref: "rightIcon",
              disabled: i(O)(!0),
              "aria-label": (Qe = i(s).ariaLabels) == null ? void 0 : Qe.nextMonth,
              onActivate: l[7] || (l[7] = (ae) => i(I)(!0)),
              onSetRef: l[8] || (l[8] = (ae) => ce(ae, 3))
            }, {
              default: oe(() => [
                f.$slots[f.vertical ? "arrow-down" : "arrow-right"] ? W(f.$slots, f.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : M("", !0),
                f.$slots[f.vertical ? "arrow-down" : "arrow-right"] ? M("", !0) : (h(), fe(Bn(f.vertical ? i(Wn) : i(wn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : M("", !0)
          ], 64)) : M("", !0),
          f.monthPicker ? (h(), fe(bt, Pe({ key: 1 }, i(le)("month"), {
            "skip-active": f.range,
            year: e.year,
            "multi-model-value": i(U),
            "month-picker": "",
            modelValue: i(E),
            "onUpdate:modelValue": l[17] || (l[17] = (ae) => lt(E) ? E.value = ae : null),
            onToggle: m,
            onSelected: l[18] || (l[18] = (ae) => f.$emit("overlay-closed"))
          }), Ee({
            header: oe(() => {
              var ae, et, Ke;
              return [
                te("div", Rr, [
                  te("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: z,
                    onClick: l[9] || (l[9] = (Oe) => Z(!1)),
                    onKeydown: l[10] || (l[10] = ie((Oe) => Z(!1), ["enter"]))
                  }, [
                    te("div", {
                      class: ye(["dp__inner_nav", { dp__inner_nav_disabled: i(O)(!1) }]),
                      role: "button",
                      "aria-label": (ae = i(s).ariaLabels) == null ? void 0 : ae.prevMonth
                    }, [
                      f.$slots["arrow-left"] ? W(f.$slots, "arrow-left", { key: 0 }) : M("", !0),
                      f.$slots["arrow-left"] ? M("", !0) : (h(), fe(i(kn), { key: 1 }))
                    ], 10, Or)
                  ], 544),
                  te("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: Y,
                    "aria-label": (et = i(s).ariaLabels) == null ? void 0 : et.openYearsOverlay,
                    tabindex: "0",
                    onClick: l[11] || (l[11] = () => k(!1)),
                    onKeydown: l[12] || (l[12] = ie(() => k(!1), ["enter"]))
                  }, [
                    f.$slots.year ? W(f.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : M("", !0),
                    f.$slots.year ? M("", !0) : (h(), R(ue, { key: 1 }, [
                      je(_e(e.year), 1)
                    ], 64))
                  ], 40, Ir),
                  te("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: Q,
                    onClick: l[13] || (l[13] = (Oe) => Z(!0)),
                    onKeydown: l[14] || (l[14] = ie((Oe) => Z(!0), ["enter"]))
                  }, [
                    te("div", {
                      class: ye(["dp__inner_nav", { dp__inner_nav_disabled: i(O)(!0) }]),
                      role: "button",
                      "aria-label": (Ke = i(s).ariaLabels) == null ? void 0 : Ke.nextMonth
                    }, [
                      f.$slots["arrow-right"] ? W(f.$slots, "arrow-right", { key: 0 }) : M("", !0),
                      f.$slots["arrow-right"] ? M("", !0) : (h(), fe(i(wn), { key: 1 }))
                    ], 10, Br)
                  ], 544)
                ]),
                tt(gt, {
                  name: i(c)(d.value),
                  css: i(p)
                }, {
                  default: oe(() => [
                    d.value ? (h(), fe(bt, Pe({ key: 0 }, i(le)("year"), {
                      modelValue: i(N),
                      "onUpdate:modelValue": l[15] || (l[15] = (Oe) => lt(N) ? N.value = Oe : null),
                      onToggle: k,
                      onSelected: l[16] || (l[16] = (Oe) => f.$emit("overlay-closed"))
                    }), Ee({
                      "button-icon": oe(() => [
                        f.$slots["calendar-icon"] ? W(f.$slots, "calendar-icon", { key: 0 }) : M("", !0),
                        f.$slots["calendar-icon"] ? M("", !0) : (h(), fe(i(Lt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      f.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: oe(({ item: Oe }) => [
                          W(f.$slots, "year-overlay-value", {
                            text: Oe.text,
                            value: Oe.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : M("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            f.$slots["month-overlay-value"] ? {
              name: "item",
              fn: oe(({ item: ae }) => [
                W(f.$slots, "month-overlay-value", {
                  text: ae.text,
                  value: ae.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : M("", !0),
          f.yearPicker ? (h(), fe(bt, Pe({ key: 2 }, i(le)("year"), {
            modelValue: i(N),
            "onUpdate:modelValue": l[19] || (l[19] = (ae) => lt(N) ? N.value = ae : null),
            "multi-model-value": i(U),
            "skip-active": f.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: k,
            onSelected: l[20] || (l[20] = (ae) => f.$emit("overlay-closed"))
          }), Ee({ _: 2 }, [
            f.$slots["year-overlay-value"] ? {
              name: "item",
              fn: oe(({ item: ae }) => [
                W(f.$slots, "year-overlay-value", {
                  text: ae.text,
                  value: ae.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : M("", !0)
        ], 64))
      ]);
    };
  }
}), Vr = {
  key: 0,
  class: "dp__time_input"
}, Er = ["aria-label", "onKeydown", "onClick"], Lr = ["aria-label", "data-test", "onKeydown", "onClick"], Fr = ["aria-label", "onKeydown", "onClick"], Ur = { key: 0 }, Hr = ["aria-label", "onKeydown"], Wr = /* @__PURE__ */ We({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...at
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: s, setTimePickerBackRef: c } = nt(), { defaults: p } = Le(t), { transitionName: $, showTransition: I } = Ft(p.value.transitions), O = Dt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), L = F("AM"), S = F(null), d = F([]);
    He(() => {
      a("mounted");
    });
    const A = V(() => (u) => !!(t.maxTime && t.maxTime[u] && t.maxTime[u] < t[u] + +t[`${u}Increment`])), z = V(() => (u) => !!(t.minTime && t.minTime[u] && t.minTime[u] > t[u] - +t[`${u}Increment`])), Y = (u, r) => Fn(Be(D(), u), r), Q = (u, r) => da(Be(D(), u), r), B = V(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), E = V(() => {
      const u = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? u.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : u;
    }), N = V(() => E.value.filter((u) => !u.separator)), x = V(() => (u) => {
      if (u === "hours") {
        const r = U(t.hours);
        return { text: r < 10 ? `0${r}` : `${r}`, value: r };
      }
      return { text: t[u] < 10 ? `0${t[u]}` : `${t[u]}`, value: t[u] };
    }), ne = (u) => {
      const r = t.is24 ? 24 : 12, v = u === "hours" ? r : 60, m = +t[`${u}GridIncrement`], k = u === "hours" && !t.is24 ? m : 0, K = [];
      for (let Z = k; Z < v; Z += m)
        K.push({ value: Z, text: Z < 10 ? `0${Z}` : `${Z}` });
      return u === "hours" && !t.is24 && K.push({ value: 0, text: "12" }), Fa(K);
    }, le = (u, r) => {
      const v = t.minTime && t.minTime[r], m = t.maxTime && t.maxTime[r];
      return v && m ? u < v || u > m : v ? u < v : m ? u > m : !1;
    }, de = V(() => (u) => ne(u).flat().filter((v) => v).map((v) => v.value).filter((v) => le(v, u))), _ = (u) => t[`no${u[0].toUpperCase() + u.slice(1)}Overlay`], y = (u) => {
      _(u) || (O[u] = !O[u], O[u] || a("overlay-closed"));
    }, C = (u) => u === "hours" ? Xe : u === "minutes" ? qe : yt, w = (u, r = !0) => {
      const v = r ? Y : Q;
      (r ? A.value(u) : z.value(u)) || a(
        `update:${u}`,
        C(u)(v({ [u]: +t[u] }, { [u]: +t[`${u}Increment`] }))
      );
    }, U = (u) => t.is24 ? u : (u >= 12 ? L.value = "PM" : L.value = "AM", za(u)), X = () => {
      L.value === "PM" ? (L.value = "AM", a("update:hours", t.hours - 12)) : (L.value = "PM", a("update:hours", t.hours + 12));
    }, J = (u) => {
      O[u] = !0;
    }, T = (u, r, v) => {
      if (u && t.arrowNavigation) {
        Array.isArray(d.value[r]) ? d.value[r][v] = u : d.value[r] = [u];
        const m = d.value.reduce(
          (k, K) => K.map((Z, ce) => [...k[ce] || [], K[ce]]),
          []
        );
        c(t.closeTimePickerBtn), S.value && (m[1] = m[1].concat(S.value)), s(m, t.order);
      }
    }, P = (u, r) => u === "hours" && !t.is24 ? a(`update:${u}`, L.value === "PM" ? r + 12 : r) : a(`update:${u}`, r);
    return n({ openChildCmp: J }), (u, r) => {
      var v;
      return u.disabled ? M("", !0) : (h(), R("div", Vr, [
        (h(!0), R(ue, null, Me(i(E), (m, k) => {
          var K, Z, ce;
          return h(), R("div", {
            key: k,
            class: ye(i(B))
          }, [
            m.separator ? (h(), R(ue, { key: 0 }, [
              je(" : ")
            ], 64)) : (h(), R(ue, { key: 1 }, [
              te("div", {
                class: ye({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: i(A)(m.type)
                }),
                role: "button",
                "data-test": "time-inc-btn",
                "aria-label": (K = i(p).ariaLabels) == null ? void 0 : K.incrementValue(m.type),
                tabindex: "0",
                onKeydown: [
                  ie((f) => w(m.type), ["enter"]),
                  ie((f) => w(m.type), ["space"])
                ],
                onClick: (f) => w(m.type),
                ref_for: !0,
                ref: (f) => T(f, k, 0)
              }, [
                u.$slots["arrow-up"] ? W(u.$slots, "arrow-up", { key: 0 }) : M("", !0),
                u.$slots["arrow-up"] ? M("", !0) : (h(), fe(i(Hn), { key: 1 }))
              ], 42, Er),
              te("div", {
                role: "button",
                "aria-label": (Z = i(p).ariaLabels) == null ? void 0 : Z.openTpOverlay(m.type),
                class: ye(_(m.type) ? "" : "dp__time_display"),
                tabindex: "0",
                "data-test": `${m.type}-toggle-overlay-btn`,
                onKeydown: [
                  ie((f) => y(m.type), ["enter"]),
                  ie((f) => y(m.type), ["space"])
                ],
                onClick: (f) => y(m.type),
                ref_for: !0,
                ref: (f) => T(f, k, 1)
              }, [
                u.$slots[m.type] ? W(u.$slots, m.type, {
                  key: 0,
                  text: i(x)(m.type).text,
                  value: i(x)(m.type).value
                }) : M("", !0),
                u.$slots[m.type] ? M("", !0) : (h(), R(ue, { key: 1 }, [
                  je(_e(i(x)(m.type).text), 1)
                ], 64))
              ], 42, Lr),
              te("div", {
                class: ye({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: i(z)(m.type)
                }),
                role: "button",
                "data-test": "time-dec-btn",
                "aria-label": (ce = i(p).ariaLabels) == null ? void 0 : ce.decrementValue(m.type),
                tabindex: "0",
                onKeydown: [
                  ie((f) => w(m.type, !1), ["enter"]),
                  ie((f) => w(m.type, !1), ["space"])
                ],
                onClick: (f) => w(m.type, !1),
                ref_for: !0,
                ref: (f) => T(f, k, 2)
              }, [
                u.$slots["arrow-down"] ? W(u.$slots, "arrow-down", { key: 0 }) : M("", !0),
                u.$slots["arrow-down"] ? M("", !0) : (h(), fe(i(Wn), { key: 1 }))
              ], 42, Fr)
            ], 64))
          ], 2);
        }), 128)),
        u.is24 ? M("", !0) : (h(), R("div", Ur, [
          u.$slots["am-pm-button"] ? W(u.$slots, "am-pm-button", {
            key: 0,
            toggle: X,
            value: L.value
          }) : M("", !0),
          u.$slots["am-pm-button"] ? M("", !0) : (h(), R("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: S,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (v = i(p).ariaLabels) == null ? void 0 : v.amPmButton,
            tabindex: "0",
            onClick: X,
            onKeydown: [
              ie(Je(X, ["prevent"]), ["enter"]),
              ie(Je(X, ["prevent"]), ["space"])
            ]
          }, _e(L.value), 41, Hr))
        ])),
        (h(!0), R(ue, null, Me(i(N), (m, k) => (h(), fe(gt, {
          key: k,
          name: i($)(O[m.type]),
          css: i(I)
        }, {
          default: oe(() => [
            O[m.type] ? (h(), fe(bt, {
              key: 0,
              items: ne(m.type),
              "disabled-values": i(p).filters.times[m.type].concat(i(de)(m.type)),
              "esc-close": u.escClose,
              "aria-labels": i(p).ariaLabels,
              "hide-navigation": u.hideNavigation,
              "onUpdate:modelValue": (K) => P(m.type, K),
              onSelected: (K) => y(m.type),
              onToggle: (K) => y(m.type),
              onResetFlow: r[0] || (r[0] = (K) => u.$emit("reset-flow")),
              type: m.type
            }, Ee({
              "button-icon": oe(() => [
                u.$slots["clock-icon"] ? W(u.$slots, "clock-icon", { key: 0 }) : M("", !0),
                u.$slots["clock-icon"] ? M("", !0) : (h(), fe(i(Un), { key: 1 }))
              ]),
              _: 2
            }, [
              u.$slots[`${m.type}-overlay-value`] ? {
                name: "item",
                fn: oe(({ item: K }) => [
                  W(u.$slots, `${m.type}-overlay-value`, {
                    text: K.text,
                    value: K.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : M("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), zr = ["aria-label"], Kr = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, jr = {
  key: 1,
  class: "dp__overlay_row"
}, xr = ["aria-label"], Gr = /* @__PURE__ */ We({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: s, setTimePicker: c } = nt(), p = sn(), { hideNavigationButtons: $, defaults: I } = Le(t), { transitionName: O, showTransition: L } = Ft(I.value.transitions), S = F(null), d = F(null), A = F([]), z = F(null);
    He(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? s([Te(S.value)], "time") : c(!0, t.timePicker);
    });
    const Y = V(() => t.range && t.modelAuto ? Gn(t.internalModelValue) : !0), Q = F(!1), B = (w) => ({
      hours: Array.isArray(t.hours) ? t.hours[w] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[w] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[w] : t.seconds
    }), E = V(() => {
      const w = [];
      if (t.range)
        for (let U = 0; U < 2; U++)
          w.push(B(U));
      else
        w.push(B(0));
      return w;
    }), N = (w, U = !1, X = "") => {
      U || a("reset-flow"), Q.value = w, w && a("overlay-opened"), t.arrowNavigation && (c(w), w || a("overlay-closed")), mt(() => {
        X !== "" && A.value[0] && A.value[0].openChildCmp(X);
      });
    }, x = V(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), ne = it(p, "timePicker"), le = (w, U, X) => t.range ? U === 0 ? [w, E.value[1][X]] : [E.value[0][X], w] : w, de = (w) => {
      a("update:hours", w);
    }, _ = (w) => {
      a("update:minutes", w);
    }, y = (w) => {
      a("update:seconds", w);
    }, C = () => {
      z.value && t.arrowNavigation && z.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: N }), (w, U) => {
      var X;
      return h(), R("div", null, [
        w.timePicker ? M("", !0) : Pt((h(), R("div", {
          key: 0,
          class: ye(i(x)),
          role: "button",
          "aria-label": (X = i(I).ariaLabels) == null ? void 0 : X.openTimePicker,
          tabindex: "0",
          "data-test": "open-time-picker-btn",
          ref_key: "openTimePickerBtn",
          ref: S,
          onKeydown: [
            U[0] || (U[0] = ie((J) => N(!0), ["enter"])),
            U[1] || (U[1] = ie((J) => N(!0), ["space"]))
          ],
          onClick: U[2] || (U[2] = (J) => N(!0))
        }, [
          w.$slots["clock-icon"] ? W(w.$slots, "clock-icon", { key: 0 }) : M("", !0),
          w.$slots["clock-icon"] ? M("", !0) : (h(), fe(i(Un), { key: 1 }))
        ], 42, zr)), [
          [Ct, !i($)("time")]
        ]),
        tt(gt, {
          name: i(O)(Q.value),
          css: i(L)
        }, {
          default: oe(() => {
            var J;
            return [
              Q.value || w.timePicker ? (h(), R("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: z,
                tabindex: "0"
              }, [
                te("div", Kr, [
                  w.$slots["time-picker-overlay"] ? W(w.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: de,
                    setMinutes: _,
                    setSeconds: y
                  }) : M("", !0),
                  w.$slots["time-picker-overlay"] ? M("", !0) : (h(), R("div", jr, [
                    (h(!0), R(ue, null, Me(i(E), (T, P) => Pt((h(), fe(Wr, Pe({ key: P }, {
                      ...w.$props,
                      order: P,
                      hours: T.hours,
                      minutes: T.minutes,
                      seconds: T.seconds,
                      closeTimePickerBtn: d.value,
                      disabled: P === 0 ? w.fixedStart : w.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: A,
                      "onUpdate:hours": (u) => de(le(u, P, "hours")),
                      "onUpdate:minutes": (u) => _(le(u, P, "minutes")),
                      "onUpdate:seconds": (u) => y(le(u, P, "seconds")),
                      onMounted: C,
                      onOverlayClosed: C
                    }), Ee({ _: 2 }, [
                      Me(i(ne), (u, r) => ({
                        name: u,
                        fn: oe((v) => [
                          W(w.$slots, u, Ne(Ue(v)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Ct, P === 0 ? !0 : i(Y)]
                    ])), 128))
                  ])),
                  w.timePicker ? M("", !0) : Pt((h(), R("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: d,
                    class: ye(i(x)),
                    role: "button",
                    "aria-label": (J = i(I).ariaLabels) == null ? void 0 : J.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      U[3] || (U[3] = ie((T) => N(!1), ["enter"])),
                      U[4] || (U[4] = ie((T) => N(!1), ["space"]))
                    ],
                    onClick: U[5] || (U[5] = (T) => N(!1))
                  }, [
                    w.$slots["calendar-icon"] ? W(w.$slots, "calendar-icon", { key: 0 }) : M("", !0),
                    w.$slots["calendar-icon"] ? M("", !0) : (h(), fe(i(Lt), { key: 1 }))
                  ], 42, xr)), [
                    [Ct, !i($)("time")]
                  ])
                ])
              ], 512)) : M("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Zr = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: s } = Le(n), c = F(null), p = F(D()), $ = (r) => {
    !r.current && n.hideOffsetDates || (c.value = r.value);
  }, I = () => {
    c.value = null;
  }, O = (r) => Array.isArray(e.value) && n.range && e.value[0] && c.value ? r ? Ve(c.value, e.value[0]) : Re(c.value, e.value[0]) : !0, L = (r, v) => {
    const m = () => e.value ? v ? e.value[0] || null : e.value[1] : null, k = e.value && Array.isArray(e.value) ? m() : null;
    return ke(D(r.value), k);
  }, S = (r) => {
    const v = Array.isArray(e.value) ? e.value[0] : null;
    return r ? !Re(c.value || null, v) : !0;
  }, d = (r, v = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !r.current ? !1 : ke(D(r.value), e.value[v ? 0 : 1]) : n.range ? L(r, v) && S(v) || ke(r.value, Array.isArray(e.value) ? e.value[0] : null) && O(v) : !1, A = (r, v, m) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? r ? !1 : m ? Ve(e.value[0], v.value) : Re(e.value[0], v.value) : !1, z = (r) => !e.value || n.hideOffsetDates && !r.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? ke(r.value, e.value[0] ? e.value[0] : p.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((v) => ke(v, r.value)) : ke(r.value, e.value ? e.value : p.value), Y = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const v = vt(c.value, +n.autoRange), m = s(D(c.value));
        return n.weekPicker ? ke(m[1], D(r.value)) : ke(v, D(r.value));
      }
      return !1;
    }
    return !1;
  }, Q = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        const v = vt(c.value, +n.autoRange);
        if (n.hideOffsetDates && !r.current)
          return !1;
        const m = s(D(c.value));
        return n.weekPicker ? Ve(r.value, m[0]) && Re(r.value, m[1]) : Ve(r.value, c.value) && Re(r.value, v);
      }
      return !1;
    }
    return !1;
  }, B = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (c.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const v = s(D(c.value));
        return n.weekPicker ? ke(v[0], r.value) : ke(c.value, r.value);
      }
      return !1;
    }
    return !1;
  }, E = (r) => zn(e.value, c.value, r.value), N = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, x = () => n.modelAuto ? Gn(n.internalModelValue) : !0, ne = (r) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const v = n.range ? !d(r) && !d(r, !1) : !0;
    return !a(r.value) && !z(r) && !(!r.current && n.hideOffsetDates) && v;
  }, le = (r) => n.range ? n.modelAuto ? N() && z(r) : !1 : z(r), de = (r) => n.highlight ? t(r.value, n.highlight) : !1, _ = (r) => a(r.value) && n.highlightDisabledDays === !1, y = (r) => n.highlightWeekDays && n.highlightWeekDays.includes(r.value.getDay()), C = (r) => (n.range || n.weekPicker) && (!(n.multiCalendars > 0) || r.current) && x() && !(!r.current && n.hideOffsetDates) && !z(r) ? E(r) : !1, w = (r) => ({
    dp__cell_offset: !r.current,
    dp__pointer: !n.disabled && !(!r.current && n.hideOffsetDates) && !a(r.value),
    dp__cell_disabled: a(r.value),
    dp__cell_highlight: !_(r) && (de(r) || y(r)) && !le(r),
    dp__cell_highlight_active: !_(r) && (de(r) || y(r)) && le(r),
    dp__today: !n.noToday && ke(r.value, p.value) && r.current
  }), U = (r) => ({
    dp__active_date: le(r),
    dp__date_hover: ne(r)
  }), X = (r) => ({
    ...J(r),
    ...T(r),
    dp__range_between_week: C(r) && n.weekPicker
  }), J = (r) => ({
    dp__range_start: n.multiCalendars > 0 ? r.current && d(r) && x() : d(r) && x(),
    dp__range_end: n.multiCalendars > 0 ? r.current && d(r, !1) && x() : d(r, !1) && x(),
    dp__range_between: C(r) && !n.weekPicker,
    dp__date_hover_start: A(ne(r), r, !0),
    dp__date_hover_end: A(ne(r), r, !1)
  }), T = (r) => ({
    ...J(r),
    dp__cell_auto_range: Q(r),
    dp__cell_auto_range_start: B(r),
    dp__cell_auto_range_end: Y(r)
  }), P = (r) => n.range ? n.autoRange ? T(r) : n.modelAuto ? { ...U(r), ...J(r) } : J(r) : n.weekPicker ? X(r) : U(r);
  return {
    setHoverDate: $,
    clearHoverDate: I,
    getDayClassData: (r) => ({
      ...w(r),
      ...P(r),
      [n.dayClass ? n.dayClass(r.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Xr = ["id", "onKeydown"], qr = {
  key: 0,
  class: "dp__sidebar_left"
}, Jr = {
  key: 1,
  class: "dp__preset_ranges"
}, Qr = ["onClick"], el = {
  key: 2,
  class: "dp__sidebar_right"
}, tl = {
  key: 3,
  class: "dp__now_wrap"
}, nl = /* @__PURE__ */ We({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...at
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setMenuFocused: s, setShiftKey: c, control: p } = Kn(), { getCalendarDays: $, defaults: I } = Le(t), O = sn(), L = F(null), S = Dt({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), d = F([]), A = F([]), z = F(null), Y = F(null), Q = F(0), B = F(!1), E = F(0);
    He(() => {
      var H;
      B.value = !0, !((H = t.presetRanges) != null && H.length) && !O["left-sidebar"] && !O["right-sidebar"] && me();
      const g = Te(Y);
      if (g && !t.textInput && !t.inline && (s(!0), _()), g) {
        const Ae = ($e) => {
          Object.keys(O).length || $e.preventDefault(), $e.stopImmediatePropagation(), $e.stopPropagation();
        };
        g.addEventListener("pointerdown", Ae), g.addEventListener("mousedown", Ae);
      }
      window.addEventListener("resize", me);
    }), on(() => {
      window.removeEventListener("resize", me);
    });
    const { arrowRight: N, arrowLeft: x, arrowDown: ne, arrowUp: le } = nt(), de = (g) => {
      g || g === 0 ? A.value[g].triggerTransition(
        X.value(g),
        J.value(g)
      ) : A.value.forEach(
        (H, Ae) => H.triggerTransition(X.value(Ae), J.value(Ae))
      );
    }, _ = () => {
      const g = Te(Y);
      g && g.focus({ preventScroll: !0 });
    }, y = () => {
      var g;
      (g = t.flow) != null && g.length && E.value !== -1 && (E.value += 1, a("flow-step", E.value), b());
    }, C = () => {
      E.value = -1;
    }, {
      calendars: w,
      modelValue: U,
      month: X,
      year: J,
      time: T,
      updateTime: P,
      updateMonthYear: u,
      selectDate: r,
      getWeekNum: v,
      monthYearSelect: m,
      handleScroll: k,
      handleArrow: K,
      handleSwipe: Z,
      getMarker: ce,
      selectCurrentDate: f,
      presetDateRange: l
    } = Ja(t, a, y, de, E), { setHoverDate: G, clearHoverDate: be, getDayClassData: De } = Zr(U, t);
    dt(
      w,
      () => {
        t.openOnTop && setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const ze = it(O, "calendar"), Qe = it(O, "action"), ae = it(O, "timePicker"), et = it(O, "monthYear"), Ke = V(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), Oe = V(() => Ha(t.yearRange)), re = V(() => Wa(t.locale, t.monthNameFormat)), me = () => {
      const g = Te(L);
      g && (Q.value = g.getBoundingClientRect().width);
    }, ve = V(() => (g) => $(X.value(g), J.value(g))), Ge = V(
      () => I.value.multiCalendars > 0 && t.range ? [...Array(I.value.multiCalendars).keys()] : [0]
    ), Ze = V(
      () => (g) => g === 1
    ), Ut = V(() => t.monthPicker || t.timePicker || t.yearPicker), Ht = V(
      () => ({
        dp__flex_display: I.value.multiCalendars > 0
      })
    ), $t = V(() => ({
      dp__instance_calendar: I.value.multiCalendars > 0
    })), ht = V(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), Wt = V(
      () => (g) => Kt(ve, g)
    ), zt = V(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), Kt = (g, H) => g.value(H).map((Ae) => ({
      ...Ae,
      days: Ae.days.map(($e) => ($e.marker = ce($e), $e.classData = De($e), $e))
    })), Mt = (g) => {
      g.stopPropagation(), g.stopImmediatePropagation();
    }, yn = () => {
      t.escClose && a("close-picker");
    }, gn = (g, H = !1) => {
      r(g, H), t.spaceConfirm && a("select-date");
    }, Tt = (g) => {
      var H;
      (H = t.flow) != null && H.length && (S[g] = !0, Object.keys(S).filter((Ae) => !S[Ae]).length || b());
    }, o = (g, H, Ae, $e, ...At) => {
      if (t.flow[E.value] === g) {
        const q = $e ? H.value[0] : H.value;
        q && q[Ae](...At);
      }
    }, b = () => {
      o("month", d, "toggleMonthPicker", !0, !0), o("year", d, "toggleYearPicker", !0, !0), o("calendar", z, "toggleTimePicker", !1, !1, !0), o("time", z, "toggleTimePicker", !1, !0, !0);
      const g = t.flow[E.value];
      (g === "hours" || g === "minutes" || g === "seconds") && o(g, z, "toggleTimePicker", !1, !0, !0, g);
    }, j = (g) => {
      if (t.arrowNavigation) {
        if (g === "up")
          return le();
        if (g === "down")
          return ne();
        if (g === "left")
          return x();
        if (g === "right")
          return N();
      } else
        g === "left" || g === "up" ? K("left", 0, g === "up") : K("right", 0, g === "down");
    }, ee = (g) => {
      c(g.shiftKey), !t.disableMonthYearSelect && g.code === "Tab" && g.target.classList.contains("dp__menu") && p.value.shiftKeyInMenu && (g.preventDefault(), g.stopImmediatePropagation(), a("close-picker"));
    }, we = (g) => {
      d.value[0] && d.value[0].handleMonthYearChange(g);
    };
    return n({
      updateMonthYear: u
    }), (g, H) => {
      var Ae;
      return h(), fe(gt, {
        appear: "",
        name: (Ae = i(I).transitions) == null ? void 0 : Ae.menuAppear,
        mode: "out-in",
        css: !!g.transitions
      }, {
        default: oe(() => {
          var $e, At;
          return [
            te("div", {
              id: g.uid ? `dp-menu-${g.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: Y,
              role: "dialog",
              class: ye(i(zt)),
              onMouseleave: H[15] || (H[15] = //@ts-ignore
              (...q) => i(be) && i(be)(...q)),
              onClick: Mt,
              onKeydown: [
                ie(yn, ["esc"]),
                H[16] || (H[16] = ie(Je((q) => j("left"), ["prevent"]), ["left"])),
                H[17] || (H[17] = ie(Je((q) => j("up"), ["prevent"]), ["up"])),
                H[18] || (H[18] = ie(Je((q) => j("down"), ["prevent"]), ["down"])),
                H[19] || (H[19] = ie(Je((q) => j("right"), ["prevent"]), ["right"])),
                ee
              ]
            }, [
              (g.disabled || g.readonly) && g.inline ? (h(), R("div", {
                key: 0,
                class: ye(i(ht))
              }, null, 2)) : M("", !0),
              !g.inline && !g.teleportCenter ? (h(), R("div", {
                key: 1,
                class: ye(i(Ke))
              }, null, 2)) : M("", !0),
              te("div", {
                class: ye({
                  dp__menu_content_wrapper: (($e = g.presetRanges) == null ? void 0 : $e.length) || !!g.$slots["left-sidebar"] || !!g.$slots["right-sidebar"]
                })
              }, [
                g.$slots["left-sidebar"] ? (h(), R("div", qr, [
                  W(g.$slots, "left-sidebar", Ne(Ue({ handleMonthYearChange: we })))
                ])) : M("", !0),
                (At = g.presetRanges) != null && At.length ? (h(), R("div", Jr, [
                  (h(!0), R(ue, null, Me(g.presetRanges, (q, ct) => (h(), R("div", {
                    key: ct,
                    style: ot(q.style || {}),
                    class: "dp__preset_range",
                    onClick: (se) => i(l)(q.range, !!q.slot)
                  }, [
                    q.slot ? W(g.$slots, q.slot, {
                      key: 0,
                      presetDateRange: i(l),
                      label: q.label,
                      range: q.range
                    }) : (h(), R(ue, { key: 1 }, [
                      je(_e(q.label), 1)
                    ], 64))
                  ], 12, Qr))), 128))
                ])) : M("", !0),
                te("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: L,
                  role: "document"
                }, [
                  te("div", {
                    class: ye(i(Ht))
                  }, [
                    (h(!0), R(ue, null, Me(i(Ge), (q, ct) => (h(), R("div", {
                      key: q,
                      class: ye(i($t))
                    }, [
                      !g.disableMonthYearSelect && !g.timePicker ? (h(), fe(Yr, Pe({
                        key: 0,
                        ref_for: !0,
                        ref: (se) => {
                          se && (d.value[ct] = se);
                        },
                        months: i(re),
                        years: i(Oe),
                        month: i(X)(q),
                        year: i(J)(q),
                        instance: q,
                        "internal-model-value": e.internalModelValue
                      }, g.$props, {
                        onMount: H[0] || (H[0] = (se) => Tt("monthYearInput")),
                        onResetFlow: C,
                        onUpdateMonthYear: (se) => i(u)(q, se),
                        onMonthYearSelect: i(m),
                        onOverlayClosed: _
                      }), Ee({ _: 2 }, [
                        Me(i(et), (se, Xn) => ({
                          name: se,
                          fn: oe((jt) => [
                            W(g.$slots, se, Ne(Ue(jt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : M("", !0),
                      tt($r, Pe({
                        ref_for: !0,
                        ref: (se) => {
                          se && (A.value[ct] = se);
                        },
                        "specific-mode": i(Ut),
                        "get-week-num": i(v),
                        instance: q,
                        "mapped-dates": i(Wt)(q),
                        month: i(X)(q),
                        year: i(J)(q)
                      }, g.$props, {
                        "flow-step": E.value,
                        "onUpdate:flowStep": H[1] || (H[1] = (se) => E.value = se),
                        onSelectDate: (se) => i(r)(se, !i(Ze)(q)),
                        onHandleSpace: (se) => gn(se, !i(Ze)(q)),
                        onSetHoverDate: H[2] || (H[2] = (se) => i(G)(se)),
                        onHandleScroll: (se) => i(k)(se, q),
                        onHandleSwipe: (se) => i(Z)(se, q),
                        onMount: H[3] || (H[3] = (se) => Tt("calendar")),
                        onResetFlow: C,
                        onTooltipOpen: H[4] || (H[4] = (se) => g.$emit("tooltip-open", se)),
                        onTooltipClose: H[5] || (H[5] = (se) => g.$emit("tooltip-close", se))
                      }), Ee({ _: 2 }, [
                        Me(i(ze), (se, Xn) => ({
                          name: se,
                          fn: oe((jt) => [
                            W(g.$slots, se, Ne(Ue({ ...jt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  te("div", null, [
                    g.$slots["time-picker"] ? W(g.$slots, "time-picker", Ne(Pe({ key: 0 }, { time: i(T), updateTime: i(P) }))) : (h(), R(ue, { key: 1 }, [
                      g.enableTimePicker && !g.monthPicker && !g.weekPicker ? (h(), fe(Gr, Pe({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: z,
                        hours: i(T).hours,
                        minutes: i(T).minutes,
                        seconds: i(T).seconds,
                        "internal-model-value": e.internalModelValue
                      }, g.$props, {
                        onMount: H[6] || (H[6] = (q) => Tt("timePicker")),
                        "onUpdate:hours": H[7] || (H[7] = (q) => i(P)(q)),
                        "onUpdate:minutes": H[8] || (H[8] = (q) => i(P)(q, !1)),
                        "onUpdate:seconds": H[9] || (H[9] = (q) => i(P)(q, !1, !0)),
                        onResetFlow: C,
                        onOverlayClosed: _,
                        onOverlayOpened: H[10] || (H[10] = (q) => g.$emit("time-picker-open", q))
                      }), Ee({ _: 2 }, [
                        Me(i(ae), (q, ct) => ({
                          name: q,
                          fn: oe((se) => [
                            W(g.$slots, q, Ne(Ue(se)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : M("", !0)
                    ], 64))
                  ])
                ], 512),
                g.$slots["right-sidebar"] ? (h(), R("div", el, [
                  W(g.$slots, "right-sidebar", Ne(Ue({ handleMonthYearChange: we })))
                ])) : M("", !0),
                g.showNowButton ? (h(), R("div", tl, [
                  g.$slots["now-button"] ? W(g.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: i(f)
                  }) : M("", !0),
                  g.$slots["now-button"] ? M("", !0) : (h(), R("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: H[11] || (H[11] = //@ts-ignore
                    (...q) => i(f) && i(f)(...q))
                  }, _e(g.nowButtonLabel), 1))
                ])) : M("", !0)
              ], 2),
              !g.autoApply || g.keepActionRow ? (h(), fe(vr, Pe({
                key: 2,
                "menu-mount": B.value,
                "calendar-width": Q.value,
                "internal-model-value": e.internalModelValue
              }, g.$props, {
                onClosePicker: H[12] || (H[12] = (q) => g.$emit("close-picker")),
                onSelectDate: H[13] || (H[13] = (q) => g.$emit("select-date")),
                onInvalidSelect: H[14] || (H[14] = (q) => g.$emit("invalid-select"))
              }), Ee({ _: 2 }, [
                Me(i(Qe), (q, ct) => ({
                  name: q,
                  fn: oe((se) => [
                    W(g.$slots, q, Ne(Ue({ ...se })))
                  ])
                }))
              ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : M("", !0)
            ], 42, Xr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), al = typeof window < "u" ? window : void 0, nn = () => {
}, rl = (e) => Jn() ? (Qn(e), !0) : !1, ll = (e, n, a, t) => {
  if (!e)
    return nn;
  let s = nn;
  const c = dt(
    () => i(e),
    ($) => {
      s(), $ && ($.addEventListener(n, a, t), s = () => {
        $.removeEventListener(n, a, t), s = nn;
      });
    },
    { immediate: !0, flush: "post" }
  ), p = () => {
    c(), s();
  };
  return rl(p), p;
}, ol = (e, n, a, t = {}) => {
  const { window: s = al, event: c = "pointerdown" } = t;
  return s ? ll(s, c, ($) => {
    const I = Te(e), O = Te(n);
    !I || !O || I === $.target || $.composedPath().includes(I) || $.composedPath().includes(O) || a($);
  }, { passive: !0 }) : void 0;
}, sl = /* @__PURE__ */ We({
  __name: "VueDatePicker",
  props: {
    ...at
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, s = sn(), c = F(!1), p = Ot(t, "modelValue"), $ = Ot(t, "timezone"), I = F(null), O = F(null), L = F(!1), S = F(null), { setMenuFocused: d, setShiftKey: A } = Kn(), { clearArrowNav: z } = nt(), { validateDate: Y, isValidTime: Q, defaults: B } = Le(t);
    He(() => {
      w(t.modelValue), t.inline || (_(S.value).addEventListener("scroll", r), window.addEventListener("resize", v)), t.inline && (c.value = !0);
    }), on(() => {
      if (!t.inline) {
        const re = _(S.value);
        re && re.removeEventListener("scroll", r), window.removeEventListener("resize", v);
      }
    });
    const E = it(s, "all", t.presetRanges), N = it(s, "input");
    dt(
      [p, $],
      () => {
        w(p.value);
      },
      { deep: !0 }
    );
    const { openOnTop: x, menuPosition: ne, setMenuPosition: le, setInitialPosition: de, getScrollableParent: _ } = tr(
      I,
      O,
      a,
      t
    ), {
      inputValue: y,
      internalModelValue: C,
      parseExternalModelValue: w,
      emitModelValue: U,
      formatInputValue: X,
      checkBeforeEmit: J
    } = Qa(a, t, L), T = V(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), P = V(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), u = V(() => t.teleport ? {
      to: typeof t.teleport == "boolean" ? "body" : t.teleport,
      disabled: t.inline
    } : { class: "dp__outer_menu_wrap" }), r = () => {
      c.value && (t.closeOnScroll ? G() : le());
    }, v = () => {
      c.value && le();
    }, m = () => {
      !t.disabled && !t.readonly && (de(), c.value = !0, mt().then(() => {
        le(), c.value && a("open");
      }), c.value || l(), w(t.modelValue));
    }, k = () => {
      y.value = "", l(), a("update:model-value", null), a("cleared"), G();
    }, K = () => {
      const re = C.value;
      return !re || !Array.isArray(re) && Y(re) ? !0 : Array.isArray(re) ? re.length === 2 && Y(re[0]) && Y(re[1]) ? !0 : Y(re[0]) : !1;
    }, Z = () => {
      J() && K() ? (U(), G()) : a("invalid-select", C.value);
    }, ce = (re) => {
      O.value && t.textInput && O.value.setParsedDate(C.value), U(), t.closeOnAutoApply && !re && G();
    }, f = (re = !1) => {
      t.autoApply && Q(C.value) && K() && (t.range && Array.isArray(C.value) ? (t.partialRange || C.value.length === 2) && ce(re) : ce(re));
    }, l = () => {
      t.textInput || (C.value = null);
    }, G = () => {
      t.inline || (c.value && (c.value = !1, d(!1), A(!1), z(), a("closed"), de(), y.value && w(p.value)), l(), O.value && O.value.focusInput());
    }, be = (re, me) => {
      if (!re) {
        C.value = null;
        return;
      }
      C.value = re, me && (Z(), a("text-submit"));
    }, De = () => {
      t.autoApply && Q(C.value) && U();
    }, ze = () => c.value ? G() : m(), Qe = (re) => {
      C.value = re;
    }, ae = V(() => t.textInput && B.value.textInputOptions.format), et = () => {
      ae.value && (L.value = !0, X()), a("focus");
    }, Ke = () => {
      ae.value && (L.value = !1, X()), a("blur");
    }, Oe = (re) => {
      I.value && I.value.updateMonthYear(0, {
        month: _n(re.month),
        year: _n(re.year)
      });
    };
    return ol(
      I,
      O,
      t.onClickOutside ? () => t.onClickOutside(K) : G
    ), n({
      closeMenu: G,
      selectDate: Z,
      clearValue: k,
      openMenu: m,
      onScroll: r,
      formatInputValue: X,
      // exposed for testing purposes
      updateInternalModelValue: Qe,
      // modify internal modelValue
      setMonthYear: Oe
    }), (re, me) => (h(), R("div", {
      class: ye(i(T)),
      ref_key: "pickerWrapperRef",
      ref: S
    }, [
      tt(ur, Pe({
        ref_key: "inputRef",
        ref: O,
        "is-menu-open": c.value,
        "input-value": i(y),
        "onUpdate:inputValue": me[0] || (me[0] = (ve) => lt(y) ? y.value = ve : null)
      }, re.$props, {
        onClear: k,
        onOpen: m,
        onSetInputDate: be,
        onSetEmptyDate: i(U),
        onSelectDate: Z,
        onToggle: ze,
        onClose: G,
        onFocus: et,
        onBlur: Ke
      }), Ee({ _: 2 }, [
        Me(i(N), (ve, Ge) => ({
          name: ve,
          fn: oe((Ze) => [
            W(re.$slots, ve, Ne(Ue(Ze)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      c.value ? (h(), fe(Bn(re.teleport ? ea : "div"), Ne(Pe({ key: 0 }, i(u))), {
        default: oe(() => [
          c.value ? (h(), fe(nl, Pe({
            key: 0,
            ref_key: "dpMenuRef",
            ref: I,
            class: i(P),
            style: i(ne),
            "open-on-top": i(x)
          }, re.$props, {
            "internal-model-value": i(C),
            "onUpdate:internalModelValue": me[1] || (me[1] = (ve) => lt(C) ? C.value = ve : null),
            onClosePicker: G,
            onSelectDate: Z,
            onAutoApply: f,
            onTimeUpdate: De,
            onFlowStep: me[2] || (me[2] = (ve) => re.$emit("flow-step", ve)),
            onUpdateMonthYear: me[3] || (me[3] = (ve) => re.$emit("update-month-year", ve)),
            onInvalidSelect: me[4] || (me[4] = (ve) => re.$emit("invalid-select", i(C))),
            onInvalidFixedRange: me[5] || (me[5] = (ve) => re.$emit("invalid-fixed-range", ve)),
            onRecalculatePosition: i(le),
            onTooltipOpen: me[6] || (me[6] = (ve) => re.$emit("tooltip-open", ve)),
            onTooltipClose: me[7] || (me[7] = (ve) => re.$emit("tooltip-close", ve)),
            onTimePickerOpen: me[8] || (me[8] = (ve) => re.$emit("time-picker-open", ve))
          }), Ee({ _: 2 }, [
            Me(i(E), (ve, Ge) => ({
              name: ve,
              fn: oe((Ze) => [
                W(re.$slots, ve, Ne(Ue({ ...Ze })))
              ])
            }))
          ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : M("", !0)
        ]),
        _: 3
      }, 16)) : M("", !0)
    ], 2));
  }
}), Zn = /* @__PURE__ */ (() => {
  const e = sl;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), il = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(il).forEach(([e, n]) => {
  e !== "default" && (Zn[e] = n);
});
export {
  Zn as default
};
